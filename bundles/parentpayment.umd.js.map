{"version":3,"file":"parentpayment.umd.js","sources":["../../../projects/parentpayment/src/lib/parentpayment.service.ts","../../../projects/parentpayment/src/lib/serivces/common-payment.service.ts","../../../projects/parentpayment/src/lib/payment-details/payment-bank-details/payment-bank-details.component.ts","../../../projects/parentpayment/src/lib/payment-details/payment-bank-details/payment-bank-details.component.html","../../../projects/parentpayment/src/lib/payment-details/payment-card-details/payment-card-details.component.ts","../../../projects/parentpayment/src/lib/payment-details/payment-card-details/payment-card-details.component.html","../../../projects/parentpayment/src/lib/payment-complete/payment-complete.component.ts","../../../projects/parentpayment/src/lib/payment-complete/payment-complete.component.html","../../../projects/parentpayment/src/lib/payment-details/payment-details.component.ts","../../../projects/parentpayment/src/lib/payment-details/payment-details.component.html","../../../projects/parentpayment/src/lib/parentpayment.component.ts","../../../projects/parentpayment/src/lib/parentpayment.module.ts","../../../projects/parentpayment/src/public-api.ts","../../../projects/parentpayment/src/parentpayment.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ParentpaymentService {\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonPaymentService {\n\n  cardCharges: any=[];\n  apiUrl:any;\n  completePageData:any;\n  private userUrl = new BehaviorSubject(null);\n  userUrl$ = this.userUrl.asObservable();\n\n  private paymentDetails = new BehaviorSubject(null);\n  paymentDetails$ = this.paymentDetails.asObservable();\n\n  private paymentStoredCard = new BehaviorSubject(null);\n  paymentStoredCard$ = this.paymentStoredCard.asObservable();\n\n  constructor(private http:HttpClient) { }\n\n  getCountryName() {\n    return this.http.get(`https://restcountries.com/v3.1/all`)\n  }\n\n  setUserResponse(data: any,key:any){\n    if(data.cardCharges){\n      this.cardCharges = data.cardCharges.findIndex((item:any) => item.paymentIntegration === (data.isStripeEnabled?\"Stripe\":\"Basys\"))\n    }\n  }\n\n  setPaymentDetails(data:any){\n      this.completePageData = data;\n      this.paymentDetails.next(data);\n  }\n\n  setPaymentStoredCard(storedCard:any){\n    this.paymentStoredCard.next(storedCard);\n  }\n\n  getApiUrl(url:any){\n    console.log('apiUrl',url);\n      this.userUrl.next(url);\n      this.apiUrl = url;\n  }\n\n  getStorecard(invoiceAddressId: string) {\n    var userdata = this.http.get(this.apiUrl.apiUrl + `invoiceaddresses/${invoiceAddressId}/storedcards`, { headers: { \"token\": this.apiUrl.token, \"portal\": this.apiUrl.portal } });\n    return userdata\n\n  }\n}\n","import { Component, OnInit,Input ,Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { CommonPaymentService } from '../../serivces/common-payment.service';\n\n@Component({\n  selector: 'lib-payment-bank-details',\n  templateUrl: './payment-bank-details.component.html',\n  styleUrls: ['./payment-bank-details.component.scss']\n})\nexport class PaymentBankDetailsComponent implements OnInit {\n\n\n  @Input() paymentData:any;\n  countryName: any;\n  paymentType: any;\n  paymentForm!: FormGroup;\n  paymentForm1!: FormGroup;\n  testForm!:FormGroup;\n  companyNameSelected:boolean=false;\n  addressline1:any;\n  addressline2:any;\n  addressline3:any;\n  surname:any;\n  name:any;\n  county:any;\n  postcode:any;\n  customerName:any;\n\n  @Input() paymentTypeS:any;\n  @Output() payEmitter:EventEmitter<any> = new EventEmitter<any>();\n  userData: any;\n  constructor(\n    private fb: FormBuilder,private commonService:CommonPaymentService\n  ) { }\n\n  ngOnInit(): void {\n\n    if(this.paymentTypeS=='PAD'){\n      this.paymentType=1;\n      this.commonService.getCountryName().subscribe(\n        (response: any) => {\n            this.countryName=response.map((country:any) => country.name.common);\n        });\n    }\n    else if(this.paymentTypeS=='Bank transfer'){\n      this.paymentType=2;\n      this.buildPaymetForm();\n    }\n    else if(this.paymentTypeS=='ACH'){\n      this.paymentType=3;\n    }\n    else if(this.paymentTypeS=='SEPA'){\n      this.paymentType=4;\n    }\n    this.companyNameSelected = this.paymentData?.customerDetails?.customerType != 'customer'\n    console.log(this.paymentData);\n    this.addressline1 = this.paymentData?.customerDetails?.addressline1 ? this.paymentData?.customerDetails?.addressline1 : this.paymentData.addressline1;\n    this.addressline2 = this.paymentData?.customerDetails?.addressline2 ? this.paymentData?.customerDetails?.addressline2 : this.paymentData.addressline2;\n    this.addressline3 = this.paymentData?.customerDetails?.addressline3 ? this.paymentData?.customerDetails?.addressline3 : this.paymentData.addressline3;\n    this.surname = this.paymentData?.customerDetails?.surname ? this.paymentData.customerDetails.surname : this.paymentData.lastName\n    this.name = this.paymentData?.customerDetails?.name ? this.paymentData.customerDetails.name : this.paymentData.firstName\n    this.postcode = this.paymentData?.customerDetails?.postcode ? this.paymentData.customerDetails.postcode : this.paymentData.postcode\n    this.county = this.paymentData?.customerDetails?.county ? this.paymentData.customerDetails.county : this.paymentData.county;\n    this.customerName = this.paymentData?.customerDetails?.customerName ? this.paymentData.customerDetails.customerName :this.paymentData.customerName;\n  }\n\n\n  buildPaymetForm() {\n    if( this.paymentType==1){\n      this.paymentForm = this.fb.group({\n        firstName: ['',[Validators.required] ],\n        lastName: ['', [Validators.required]],\n        email: ['', [Validators.required,Validators.email] ],\n        country: ['', [Validators.required]],\n        institutionNo: ['', [Validators.required]],\n        transitNo: ['', [Validators.required]],\n        accountNo: ['', [Validators.required,] ],\n      });\n\n    }\n    else if( this.paymentType==2){\n      let invoiceNo;\n      if(this.paymentData.invoiceDetails?.invoiceNumber){\n        invoiceNo = this.paymentData.invoiceDetails?.invoiceNumber ? \"Invoice no : \"+this.paymentData.invoiceDetails.invoiceNumber : '';\n      }else{\n        invoiceNo = 'Opportunity no: ' + this.paymentData.opportunityId\n      }\n      this.paymentForm = this.fb.group({\n      instantpayment: this.fb.group({\n          country_code:'GB',\n          currency:this.paymentData.currencyCode ? this.paymentData.currencyCode : 'GBP',\n          payment:this.fb.group({\n            description:invoiceNo,\n            amount:[0, [Validators.required]],\n            app_fee:\"1\",\n\n          }),\n          customer:this.fb.group({\n            commusoftId:0,\n            addressline1: this.addressline1,\n            addressline2: this.addressline2+ ((this.addressline2 && this.addressline3)?\", \":'')+this.addressline3,\n            companyname:\"\",\n            surname: this.surname,\n            firstname: this.name,\n            postcode:this.postcode,\n            phonenumber:\"\",\n            region:this.county,\n            email: [this.paymentData?.customerDetails?.emailId ? this.paymentData?.customerDetails?.emailId :'',[Validators.required, Validators.email]]\n          }),\n          bank:this.fb.group({\n            firstname:[this.customerName, [Validators.required]],\n            lastname:[\"\"],\n            account_number:['', [Validators.required]],\n            iban:\"\",\n            account_type:\"\",\n            bank_code:\"\",\n            branch_code:[\"\", [Validators.required]],\n\n          })\n\n        }),\n      });\n    }\n    else if( this.paymentType==3){\n      let invoiceNo;\n      if(this.paymentData.invoiceDetails?.invoiceNumber){\n        invoiceNo = this.paymentData.invoiceDetails?.invoiceNumber ? \"Invoice no : \"+this.paymentData.invoiceDetails.invoiceNumber : '';\n      }else{\n        invoiceNo = 'Opportunity no: ' + this.paymentData.opportunityId\n      }\n      this.paymentForm = this.fb.group({\n        directdebit: this.fb.group({\n            tablepkid: [],\n            tabletype:'invoice',\n            country_code:'US',\n            bank_mandate_ref:[''],\n            currency: this.paymentData.currencyCode,\n            scheme:\"ach\",\n            payment:this.fb.group({\n              description:invoiceNo,\n              amount:[0, [Validators.required]],\n            }),\n            customer:this.fb.group({\n              commusoftId:0,\n              addressline1: this.addressline1,\n              addressline2: this.addressline2+ ((this.addressline2 && this.addressline3)?\", \":'')+this.addressline3,\n              companyname:\"\",\n              surname: this.surname,\n              firstname: this.name,\n              postcode:this.postcode,\n              phonenumber:\"\",\n              region:this.county,\n              email: [this.paymentData.customerDetails.emailId,[Validators.required, Validators.email]],\n              language:\"\"\n            }),\n            bank:this.fb.group({\n              firstname:[this.customerName, [Validators.required]],\n              lastname:[\"\"],\n              account_number:['', [Validators.required]],\n              iban:\"\",\n              account_type:\"\",\n              bank_code:\"\",\n              branch_code:[\"\", [Validators.required]],\n            })\n          }),\n        });\n    }\n    else if( this.paymentType==4){\n      this.paymentForm = this.fb.group({\n        firstName: ['',[Validators.required] ],\n        lastName: ['', [Validators.required]],\n        email: ['', [Validators.required,Validators.email] ],\n        creditorIdentifier: ['', [Validators.required]],\n        internationalBankAccountNo: ['', [Validators.required]],\n        accountNo: ['', [Validators.required,] ],\n        billingAddress1: ['', [Validators.required]],\n        billingAddress2: ['', [Validators.required]],\n      });\n    }\n  }\n\n  companyNameClick(){\n    this.companyNameSelected=!this.companyNameSelected;\n    this.paymentForm.patchValue({'instantpayment':{'bank':{'firstname':''}}});\n    this.paymentForm.patchValue({'directdebit':{'bank':{'lastname':''}}});\n    this.paymentForm.get('directdebit.bank.lastname')?.setValue(this.companyNameSelected ? this.customerName : (this.surname ? this.surname : this.customerName));\n  }\n  \n  keypress(){ \n    this.payEmitter.emit(this.paymentForm);\n  }\n  branch_codeFormat(el:any){\n    this.paymentForm.patchValue({'instantpayment':{'bank':{'branch_code':el.target.value.replace(/[^0-9]/g, '').replace(/(\\d{2})(?=\\d)/g, \"$1-\")}}});\n    this.keypress()\n  }\n\n}\n","<form *ngIf=\"paymentForm\" [formGroup]=\"paymentForm\">\n    <div formGroupName=\"instantpayment\" *ngIf=\"paymentType == 2\">\n\n        <div class=\"content-group\">\n            <div *ngIf=\"paymentType!=2  && !companyNameSelected\" class=\"row\">\n                <div class=\"col-md-6\">\n                    <div class=\"lable required\">First name</div>\n                    <input formControlName=\"instantpayment.bank.firstname\" class=\"field\" type=\"text\"\n                        (keyup)=\"keypress()\">\n                </div>\n                <div class=\"col-md-6\">\n                    <div class=\"lable required\">Last name</div>\n                    <input formControlName=\"instantpayment.bank.lastname\" class=\"field\" type=\"text\"\n                        (keyup)=\"keypress()\">\n                </div>\n            </div>\n            <div *ngIf=\"paymentType==2 && !companyNameSelected\" class=\"direct-debit\">\n                <div formGroupName=\"bank\">\n                    <div class=\"form-group\">\n                        <div class=\"lable required\">Account holder’s name</div>\n                        <input formControlName=\"firstname\" class=\"field\" type=\"text\" (keyup)=\"keypress()\">\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"companyNameSelected\" class=\"direct-debit\">\n                <div formGroupName=\"bank\">\n                    <div class=\"form-group\">\n                        <div class=\"lable required\">Company name</div>\n                        <input formControlName=\"firstname\" class=\"field\" type=\"text\" (keyup)=\"keypress()\">\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"!companyNameSelected\" class=\"company-name-link\" (click)=\"companyNameClick()\">Or click here to\n                use a company name</div>\n            <div *ngIf=\"companyNameSelected\" class=\"company-name-link\" (click)=\"companyNameClick()\">Or click here to\n                use your personal information</div>\n        </div>\n        <div class=\"content-group\">\n            <div formGroupName=\"customer\">\n                <div class=\"form-group\">\n                    <div class=\"lable required\">Email address</div>\n                    <input formControlName=\"email\" class=\"field\" type=\"text\" placeholder=\"william.ty@example.co\"\n                        (keyup)=\"keypress()\">\n                    <div class=\"email-info\">This email will only be used to keep you updated about their payments</div>\n\n                </div>\n            </div>\n\n        </div>\n        <div *ngIf=\"paymentType==1\" class=\"content-group\">\n            <div class=\"lable required \">instantpayment</div>\n            <select formControlName=\"instantpayment.country_code\" (click)=\"keypress()\">\n                <option value=\"\" disabled selected hidden>Please select</option>\n                <option *ngFor=\"let name of countryName\" [value]=\"name\">{{name}}</option>\n            </select><i class=\"fa-solid fa-angle-down\"></i>\n        </div>\n        <div class=\"content-group\">\n            <div *ngIf=\"paymentType==1\" class=\"row\">\n                <div class=\"col-md-6\">\n                    <div class=\"lable required\">Institution number</div>\n                    <input formControlName=\"institutionNo\" class=\"field\" type=\"text\" placeholder=\"E.g. 10-20-30\"\n                        (keyup)=\"keypress()\">\n                </div>\n                <div class=\"col-md-6\">\n                    <div class=\"lable required transit-adjust\">Transit number</div>\n                    <input formControlName=\"transitNo\" class=\"field\" type=\"text\" placeholder=\"E.g. 12345678\"\n                        (keyup)=\"keypress()\">\n                </div>\n            </div>\n            <div *ngIf=\"paymentType==2\" class=\"row\">\n                <div class=\"col-md-4\">\n                    <div formGroupName=\"bank\">\n                        <div class=\"form-group\">\n                            <div class=\"lable required\">Sort code</div>\n                            <input formControlName=\"branch_code\" class=\"field\" type=\"text\" placeholder=\"E.g. 10-20-30\"\n                                (input)=\"branch_codeFormat($event)\" maxlength=\"8\">\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-8\">\n                    <div formGroupName=\"bank\">\n                        <div class=\"form-group\">\n                            <div class=\"lable required transit-adjust\">Account number</div>\n                            <input formControlName=\"account_number\" class=\"field\" type=\"text\"\n                                placeholder=\"E.g. 12345678\" (keyup)=\"keypress()\">\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div *ngIf=\"paymentType==1\" class=\"content-group\">\n            <div class=\"lable required\">Account number</div>\n            <input formControlName=\"accountNo\" class=\"field\" type=\"text\" placeholder=\"E.g. 12345678\"\n                (keyup)=\"keypress()\">\n        </div>\n\n        <div *ngIf=\"paymentType==4\" class=\"content-group\">\n            <div class=\"lable required\">Creditor identifier</div>\n            <input formControlName=\"creditorIdentifier\" class=\"field\" type=\"text\" placeholder=\"Creditor identifier\"\n                (keyup)=\"keypress()\">\n        </div>\n\n        <div *ngIf=\"paymentType==4\" class=\"content-group\">\n            <div class=\"lable required\">International bank account number (IBAN)</div>\n            <input formControlName=\"instantpayment.bank.iban\" class=\"field\" type=\"text\"\n                placeholder=\"International bank account number (IBAN)\" (keyup)=\"keypress()\">\n            <div class=\"invalid-input\"\n                *ngIf=\"paymentForm.controls['instantpayment.bank.iban'].invalid && (paymentForm.controls['instantpayment.bank.iban'].dirty || paymentForm.controls['instantpayment.bank.iban'].touched)\">\n                <span *ngIf=\"paymentForm.controls['instantpayment.bank.iban']?.errors?.required\">Please enter International bank account number (IBAN)</span>\n            </div>\n\n        </div>\n\n        <div *ngIf=\"paymentType==3 || paymentType==4\" class=\"content-group\">\n            <div class=\"lable required\">Billing address</div>\n            <input formControlName=\"addressline1\" class=\"field\" type=\"text\" placeholder=\"Address Line 1\">\n            <div class=\"invalid-input\"\n                *ngIf=\"paymentForm.controls['addressline1'].invalid && (paymentForm.controls['addressline1'].dirty || paymentForm.controls['addressline1'].touched)\">\n                <span *ngIf=\"paymentForm.controls['addressline1']?.errors?.required\"> Please enter Billing address</span>\n            </div>\n            <input formControlName=\"addressline2\" class=\"field\" type=\"text\" placeholder=\"Address Line 2\"\n                style=\"margin-top:12px\">\n\n        </div>\n        <div *ngIf=\"paymentType==3 || paymentType==4\" class=\"content-group\">\n            <div class=\"lable required\">Bank account number</div>\n            <input formControlName=\"accountNo\" class=\"field\" type=\"text\" placeholder=\"Bank account number\"\n                (keyup)=\"keypress()\">\n            <div class=\"invalid-input\"\n                *ngIf=\"paymentForm.controls['accountNo'].invalid && (paymentForm.controls['accountNo'].dirty || paymentForm.controls['accountNo'].touched)\">\n                <span *ngIf=\"paymentForm.controls['accountNo']?.errors?.required\">Please enter card holder's name</span>\n            </div>\n\n        </div>\n        <div *ngIf=\"paymentType==3\" class=\"content-group\">\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <div class=\"lable required\">Routing number</div>\n                    <input formControlName=\"routingNo\" class=\"field\" type=\"text\" placeholder=\"Routing number\"\n                        (keyup)=\"keypress()\">\n                    <div class=\"invalid-input\"\n                        *ngIf=\"paymentForm.controls['routingNo'].invalid && (paymentForm.controls['routingNo'].dirty || paymentForm.controls['routingNo'].touched)\">\n                        <span *ngIf=\"paymentForm.controls['routingNo']?.errors?.required\">Please enter Routing number</span>\n                    </div>\n                </div>\n                <div class=\"col-md-6\">\n                    <div class=\"lable required transit-adjust\">Account type</div>\n                    <select formControlName=\"instantpayment.bank.account_type\" (click)=\"keypress()\">\n                        <option value=\"\" disabled selected hidden>Please select</option>\n                        <option>xxxx - xxxx - xxxx - 1234</option>\n                        <option>Use existing credit card</option>\n                    </select><i class=\"fa-solid fa-angle-down\"></i>\n                </div>\n            </div>\n        </div>\n        <div class=\"content-group\" style=\"margin-bottom: 0;\">\n            <div *ngIf=\"paymentType==1\">\n                <div class=\"confirm\">\n                    <span style=\"margin-top: 5px;\">I confirm that I am the account holder and am authorised to set up\n                        PAD payments on this account</span>\n                </div>\n            </div>\n\n            <div *ngIf=\"paymentType==2\">\n                <div class=\"confirm\">\n                    <span>We work with a company called GoCardless. They help us process your payment, which involves\n                        some of your personal data. By continuing, you agree to their terms of use and understand their<a href=\"https://gocardless.com/privacy/payers/\" target=\"_blank\"> privacy\n                            notice.</a></span>\n                </div>\n            </div>\n\n\n            <div *ngIf=\"paymentType==3\">\n                <div class=\"confirm-msg\">\n                    This service is provided by Community Federal Savings Bank (“CFSB”), member FDIC, forwhich\n                    GoCardless Ltd acts as a third-party servicer. GoCardless and CFSB use personal data as described in\n                    <a>these privacy notices</a>. By submitting this form, you agree to the GoCardless <a>Website Terms\n                        of Use</a>. GoCardless uses analytics <a>cookies</a>.\n                </div>\n            </div>\n\n            <div *ngIf=\"paymentType==4\">\n                <div class=\"confirm-msg\">\n                    By signing this mandate form, you authorise (A) GoCardless to send instructions to your bank to\n                    debit your account (B) your bank to debit your account in accordance with the instructions from\n                    GoCardless. As part of your rights, you are entitled to refund from your bank under the terms and\n                    conditions of your agreement with your bank. A refund must be claimed within 8 weeks starting from\n                    the date on which your account was debited.\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- <div formGroupName=\"directdebit\" *ngIf=\"paymentType == 3\">\n\n        <div class=\"content-group\" *ngIf=\"ACHBankDetails && ACHBankDetails.length != 0\" style=\"margin-bottom:-16px\">\n            <select (change)=\"dropdown($event.target)\">\n                <option>Use existing bank details</option>\n                <option>Set up new bank mandate</option>\n            </select><i class=\"fa-solid fa-angle-down\"></i>\n            <div class=\"vh\"></div>c\n        </div>\n        <div *ngIf=\"isBankDetails\">\n            <div class=\"content-group group-card\" style=\"margin-top:32px;margin-bottom: 0;\">\n                <div class=\"lable\">Select mandate</div>\n                <select (change)=\"cardSelected($event.target,'html')\">\n                    <option value=\"\" disabled selected hidden>Please select</option>\n                    <option *ngFor=\"let bank of ACHBankDetails\" [selected]=\"ACHBankDetails.length == 1\"\n                        [value]=\"bank.id\"><span class=\"cardDescription\">{{bank.bank_info.bank_name}} -\n                            {{bank.bank_info.account_holder_name}} - {{bank.bank_info.account_number_ending}}</span>\n                    </option>\n                </select><i class=\"fa-solid fa-angle-down\"></i>\n            </div>\n        </div>\n        <div *ngIf=\"!isBankDetails\" style=\"padding-top: 1px;\">\n            <div class=\"content-group\">\n                <div formGroupName=\"bank\">\n                    <div *ngIf=\"!companyNameSelected\" class=\"row\">\n                        <div class=\"col-md-6\">\n                            <div class=\"lable \">{{'First name' | translate}}</div>\n                            <input formControlName=\"firstname\" class=\"field\" type=\"text\" (keyup)=\"keypress()\">\n                        </div>\n                        <div class=\"col-md-6\">\n                            <div class=\"lable required\">{{'Last name' | translate}}</div>\n                            <input formControlName=\"lastname\" class=\"field\" type=\"text\" (keyup)=\"keypress()\">\n                        </div>\n                    </div>\n                </div>\n                <div *ngIf=\"companyNameSelected\" class=\"direct-debit\">\n                    <div formGroupName=\"bank\">\n                        <div class=\"form-group\">\n                            <div class=\"lable required\">{{'Company name' | translate}}</div>\n                            <input formControlName=\"lastname\" class=\"field\" type=\"text\" (keyup)=\"keypress()\">\n                        </div>\n                    </div>\n                </div>\n                <div *ngIf=\"!companyNameSelected\" class=\"company-name-link\" (click)=\"companyNameClick()\">{{'Or click\n                    here to use a company name' | translate}}</div>\n                <div *ngIf=\"companyNameSelected\" class=\"company-name-link\" (click)=\"companyNameClick()\">{{'Or click here\n                    to use your personal information' | translate}}</div>\n            </div>\n            <div class=\"content-group\">\n                <div formGroupName=\"customer\">\n                    <div class=\"form-group\">\n                        <div class=\"lable required\">{{'Email address' | translate}}</div>\n                        <input formControlName=\"email\" class=\"field\" type=\"email\" placeholder=\"william.ty@example.co\"\n                            (keyup)=\"keypress()\">\n                        <div class=\"email-info\">{{'This email will only be used to keep you updated about their\n                            payments' | translate}}</div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"content-group\">\n                <div formGroupName=\"customer\">\n                    <div class=\"lable\">{{'Billing address' | translate}}</div>\n                    <input formControlName=\"addressline1\" class=\"field\" type=\"text\" placeholder=\"Address Line 1\">\n\n                    <input formControlName=\"addressline2\" class=\"field\" type=\"text\" placeholder=\"Address Line 2\"\n                        style=\"margin-top:12px\">\n                </div>\n            </div>\n            <div class=\"content-group\">\n                <div formGroupName=\"bank\">\n                    <div class=\"lable required\">{{'Bank account number' | translate}}</div>\n                    <input formControlName=\"account_number\" class=\"field\" type=\"text\" placeholder=\"Bank account number\"\n                        (keyup)=\"keypress()\">\n                </div>\n            </div>\n            <div class=\"content-group\">\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div formGroupName=\"bank\">\n                            <div class=\"lable required\">{{'Routing number' | translate}}</div>\n                            <input formControlName=\"bank_code\" class=\"field\" type=\"text\" placeholder=\"Routing number\"\n                                (keyup)=\"keypress()\">\n                        </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <div formGroupName=\"bank\">\n                            <div class=\"lable required transit-adjust\">{{'Account type' | translate}}</div>\n                            <select formControlName=\"account_type\" (click)=\"keypress()\">\n                                <option value=\"\" disabled selected hidden>{{'Please select' | translate}}</option>\n                                <option>{{'Checking' | translate}}</option>\n                                <option>{{'Savings' | translate}}</option>\n                            </select><i class=\"fa-solid fa-angle-down\"></i>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"content-group\" style=\"margin-bottom: 0;\">\n                <div>\n                    <div class=\"confirm-msg\">\n                        This service is provided by Community Federal Savings Bank (“CFSB”), member FDIC, forwhich\n                        GoCardless Ltd acts as a third-party servicer. GoCardless and CFSB use personal data as\n                        described in <a href=\"https://gocardless.com/privacy/payers/\" target=\"_blank\">these privacy\n                            notices</a>. By submitting this form, you agree to the GoCardless <a\n                            href=\"https://gocardless.com/legal/customers/\" target=\"_blank\">Website Terms of Use</a>.\n                        GoCardless uses analytics <a href=\"https://privacy.gocardless.com/trackers/en-GB/\"\n                            target=\"_blank\">cookies</a>.\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div> -->\n</form>","import { Component, OnInit ,Input ,Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CreditCardValidators } from 'angular-cc-library';\nimport { CommonPaymentService } from '../../serivces/common-payment.service';\n\n@Component({\n  selector: 'lib-payment-card-details',\n  templateUrl: './payment-card-details.component.html',\n  styleUrls: ['./payment-card-details.component.scss']\n})\nexport class PaymentCardDetailsComponent implements OnInit {\n\n  @Output() payEmitter:EventEmitter<any> = new EventEmitter<any>();\n\n  userData: any;\n  storedCards: any=[];\n  cardType: any='';\n  @Input() cardPaymentData:any;\n  // @Input() storedCards:any;\n  cardSelectedType: any;\n  card:boolean=false;\n  container: any;\n  cardwidth: Number = 350;\n  messages: any = {validDate: 'valid\\ndate', monthYear: 'mm/yy'};  //Strings for translation\n  placeholders: any = {number: '•••• •••• •••• ••••', name: 'Full Name', expiry: '••/••', cvc: '•••'} // Placeholders for rendered fields\n  masks: any;\n  formatting: boolean = true;\n  debug: boolean = true; // If true, will log helpful messages for setting up Card\n  creditForm!: FormGroup;\n  summary: any;\n  companyNameSelected:boolean=false;\n  isCardNumberLength: boolean=true;\n  cardLogo: any='';\n  cardImg: string = \"\";\n  storedCardData:any;\n  paymentStoredDetials:any;\n  portalName:any;\n\n    constructor(\n    private fb: FormBuilder,\n    private commomPaymentService: CommonPaymentService\n  ) { this.cardPaymentData = this.cardPaymentData;\n    this.commomPaymentService.paymentDetails$.subscribe((response:any)=>{\n      this.cardPaymentData = response;\n    })\n    this.card = false;\n    this.buildCreditFormS();}\n\n  ngOnInit(): void {\n  \n    this.payEmitter.emit(true);\n\n    let invoiceAddressesId = this.cardPaymentData.invoiceDetails?.invoiceAddressId ? this.cardPaymentData.invoiceDetails.invoiceAddressId : this.cardPaymentData.invoiceAddressNo;\n    this.portalName = this.commomPaymentService.apiUrl?.portal;\n    this.commomPaymentService.paymentStoredCard$.subscribe((stored:any)=>{\n      this.paymentStoredDetials = stored;\n    });\n    console.log('invaddress0',this.paymentStoredDetials);\n    console.log('cardpaymentdetal',this.cardPaymentData);\n    if(this.commomPaymentService.apiUrl?.apiUrl != ''){\n      if(this.paymentStoredDetials == null || this.paymentStoredDetials == undefined){\n        this.commomPaymentService.getStorecard(invoiceAddressesId).subscribe((res:any)=>{\n          if(res && res.records){\n            this.storedCards = res.records;\n          }else{\n            this.storedCards = res;\n          }\n          this.commomPaymentService.setPaymentStoredCard(this.storedCards);\n          console.log('cardDetails',this.storedCards);\n        });\n      }else{\n        this.storedCards = this.paymentStoredDetials;\n        console.log('cardDetailsafter',this.storedCards);\n      } \n    }\n\n  }\n\n\n  dropdown(val:any){\n    this.card =false;\n    this.payEmitter.emit(false);\n    if(val.value == 'Set up new debit or credit card'){\n      this.card = true;\n      if(this.portalName != 'AcceptProposal'){\n        this.buildCreditForms();\n      }else{\n        this.buildCreditFormS();\n      }\n    }else{\n        if(this.storedCards.storedCardDetails.length == 1){\n          this.cardSelected(this.storedCards.storedCardDetails[0].id,'ts')\n        }\n      this.card = false;\n    }\n    // this.translate.get(\"Use existing credit card\").subscribe(translations => {\n    //   if(val.value== translations){\n    //     this.card=true\n    //     if(this.storedCards.length == 1){\n    //       this.cardSelected(this.storedCards[0].id,'ts')\n    //     }\n    //   }\n    //   else{\n    //     this.card=false\n    //     this.buildCreditForms()\n    //   }\n    // })\n\n  }\n\n  buildCreditForms(){\n    let date = new Date().toISOString().slice(0, 10);\n    let invoiceNo;\n    if(this.cardPaymentData.invoiceDetails?.invoiceNumber){\n      invoiceNo = this.cardPaymentData.invoiceDetails?.invoiceNumber ? \"Invoice no : \"+this.cardPaymentData.invoiceDetails.invoiceNumber : '';\n    }else{\n      invoiceNo = 'Opportunity no: ' + this.cardPaymentData.opportunityId\n    }\n    let paymentId;\n    if(this.cardPaymentData?.cardCharges.length != 0){\n      paymentId = this.cardPaymentData.cardCharges[this.commomPaymentService.cardCharges].paymentMethodId\n    }\n    this.creditForm = this.fb.group({\n      payment: this.fb.group({\n      'cardCharge': [this.cardPaymentData?.cardCharges[0].charge ? this.cardPaymentData.cardCharges[0].charge : this.cardPaymentData.paymentCharge[0].charge ],//index UI needed\n      'cardName': [this.cardPaymentData?.customerDetails?.customerName ? this.cardPaymentData.customerDetails.customerName : this.cardPaymentData.customerName, [Validators.required] ],\n      'cardNumber': ['', [Validators.required, CreditCardValidators.validateCCNumber]],\n      'cardCvc': ['', [Validators.required, Validators.minLength(3), Validators.maxLength(4)]],\n      'paymentDate': [date],\n      'description': [invoiceNo],\n      'isportal': [true ],\n      'reference': [invoiceNo ],\n      'email': [this.cardPaymentData?.customerDetails?.emailId ? this.cardPaymentData.customerDetails.emailId : '',[Validators.required, Validators.email]],\n      'expiry': ['', [Validators.required, CreditCardValidators.validateExpDate]],\n\n      \"paymentMethod\":[paymentId ? paymentId : ''],\n      \"dontSendToAccounts\":[''],\n      })\n\n    });\n    this.placeholders = {name: this.cardPaymentData?.customerDetails?.customerName ? this.cardPaymentData.customerDetails.customerName:'Full Name'};\n  }\n\n  buildCreditFormS(){\n    let date = new Date().toISOString().slice(0, 10);\n    let invoiceNo;\n    if(this.cardPaymentData?.invoiceDetails?.invoiceNumber){\n      invoiceNo = this.cardPaymentData?.invoiceDetails?.invoiceNumber ? \"Invoice no : \"+this.cardPaymentData.invoiceDetails.invoiceNumber : '';\n    }else{\n      invoiceNo = 'Opportunity no: ' + this.cardPaymentData.opportunityId\n    }\n\n    this.creditForm = this.fb.group({\n      'amount': [this.cardPaymentData?.showDeposit ? this.cardPaymentData?.showDeposit : ''],\n      'cardCharge': ['' ],//index UI needed\n      'cardName': [this.cardPaymentData?.customerDetails?.customerName ? this.cardPaymentData.customerDetails.customerName : this.cardPaymentData?.customerName, [Validators.required] ],\n      'cardNumber': ['', [Validators.required, CreditCardValidators.validateCCNumber]],\n      'cardCvc': ['', [Validators.required, Validators.minLength(3), Validators.maxLength(4)]],\n      'paymentDate': [date],\n      'description': [invoiceNo],\n      'isportal': [true ],\n      'reference': [invoiceNo ],\n      'email': [this.cardPaymentData?.customerDetails?.emailId ? this.cardPaymentData.customerDetails.emailId : '',[Validators.required, Validators.email]],\n      'expiry': ['', [Validators.required, CreditCardValidators.validateExpDate]],\n\n      \"paymentMethod\":[''],\n      \"dontSendToAccounts\":[''],\n    });\n    this.placeholders = {name: this.cardPaymentData?.customerDetails?.customerName ? this.cardPaymentData.customerDetails.customerName:'Full Name'};\n  }\n\n  companyNameClick(){\n    this.companyNameSelected=!this.companyNameSelected;\n    this.creditForm.patchValue({'payment':{'cardName':''}});\n  }\n  keypress(){\n    this.payEmitter.emit(this.creditForm);\n  }\n  setCardType(){\n    this.cardLogo=this.detectCardType(this.creditForm.value.payment.cardNumber.replace(/\\s/g, \"\"))\n    var cardStatus = this.creditForm.get('payment.cardNumber')\n    if(this.isCardNumberLength && cardStatus?.status == \"INVALID\")this.isCardNumberLength=false;\n    if(!this.isCardNumberLength && cardStatus?.status == \"VALID\")this.isCardNumberLength=true;\n    this.payEmitter.emit(this.creditForm);\n    this.cardImg = \"assets/paymentType/\"+this.cardLogo+\".svg\"\n  }\n  defaultCard(){\n    this.cardImg = \"assets/paymentType/card.svg\"\n  }\n  errorHandler() {\n    this.cardLogo = 'card';\n }\n  cardSelected(val:any,from:string){\n    if(from=='html'){\n      val=val.value\n    }\n    this.cardSelectedType = from;\n    this.cardType=val.toString();\n\n    var intArr = this.cardType.split(\",\");\n    intArr.forEach((element:any) => {\n      const tagsData = this.storedCards.storedCardDetails.find((x:any) => x['id'] == element);\n      this.cardLogo = tagsData.card_type;\n    });\n\n    let date = new Date().toISOString().slice(0, 10);\n    let invoiceNumber = this.cardPaymentData.invoiceDetails?.invoiceNumber ? \"Invoice no : #\"+this.cardPaymentData.invoiceDetails.invoiceNumber : '';\n    this.creditForm = this.fb.group({\n        'paymentDate' : [date, [Validators.required] ],\n        'description' : [invoiceNumber],\n        'reference' : [invoiceNumber ],\n        'paymentMethod' : [this.cardPaymentData.cardCharges[this.commomPaymentService.cardCharges].paymentMethodId, [Validators.required]],\n        'storedCard' : [val, [Validators.required]],\n        'cardName' : [this.cardPaymentData.customerDetails.customerName, [Validators.required]],\n        'amount' : [],\n        'cardCharge' : [this.cardPaymentData.cardCharges[this.commomPaymentService.cardCharges].charge, ],\n        'isPortal' : [true],\n      });\n      setTimeout(() => {\n        this.payEmitter.emit(this.creditForm);\n      }, 100);\n}\n\ndetectCardType(number:number) {\n  var re :any = {\n      electron: /^(4026|417500|4405|4508|4844|4913|4917)\\d+$/,\n      maestro: /^(5018|5020|5038|5612|5893|6304|6759|6761|6762|6763|0604|6390)\\d+$/,\n      dankort: /^(5019)\\d+$/,\n      interpayment: /^(636)\\d+$/,\n      unionpay: /^(62|88)\\d+$/,\n      'Visa': /^4[0-9]{12}(?:[0-9]{3})?$/,\n      'MasterCard': /^5[1-5][0-9]{14}$/,\n      'American Express': /^3[47][0-9]{13}$/,\n      diners: /^3(?:0[0-5]|[68][0-9])[0-9]{11}$/,\n      discover: /^6(?:011|5[0-9]{2})[0-9]{12}$/,\n      jcb: /^(?:2131|1800|35\\d{3})\\d{11}$/\n  }\n\n  for(var key in re) {\n      if(re[key].test(number)) {\n        return key\n      }\n  }\n  return false;\n}\n\n\n}\n","<div class=\"content-group\" *ngIf=\"storedCards.length != 0\">\n    <div class=\"content-group\" style=\"margin-bottom:-16px\" *ngIf=\"portalName != 'AcceptProposal'\">\n        <select (change)=\"dropdown($event.target)\">\n            <option>Use existing credit card</option>\n            <option>Set up new debit or credit card</option>\n        </select><i class=\"fa-solid fa-angle-down\"></i>\n        <div class=\"vh\"></div>\n    </div>\n</div>\n\n<div *ngIf=\"card\">\n    <div class=\"content-group group-card\" style=\"margin-top:32px;margin-bottom: 0;\">\n        <div class=\"lable\">Select card</div>\n        <select (selected)=\"cardSelected($event.target,'html')\"\n            [ngStyle]=\"{'padding-left': cardSelectedType == 'html' || cardSelectedType == 'ts'  ? '46px' : '' }\">\n            <option value=\"\" disabled selected hidden>Please select</option>\n            <option *ngFor=\"let card of storedCards.storedCardDetails\"\n                [selected]=\"storedCards.storedCardDetails.length == 1\" [value]=\"card.id\"><span\n                    class=\"cardDescription\">XXXX - XXXX - XXXX -\n                    {{card.description.substring(card.description.indexOf('with') + 4)| slice:0:5 }}</span></option>\n        </select><i class=\"fa-solid fa-angle-down\"></i>\n    </div>\n    <div *ngIf=\"cardSelectedType == 'html' || cardSelectedType == 'ts'\">\n        <img class=\"stored-icon-aligns\" src=\"assets/paymentType/{{cardLogo}}.svg\" (error)=\"errorHandler()\">\n    </div>\n</div>\n<div *ngIf=\"!card\">\n    <div *ngIf=\"portalName != 'AcceptProposal'\">\n        <form [formGroup]=\"creditForm\" card container=\".card-container\" [card-width]=\"410\" [messages]=\"messages\"\n            [placeholders]=\"placeholders\" [masks]=\"masks\" [formatting]=\"formatting\" [debug]=\"debug\">\n            <ng-container formGroupName=\"payment\">\n                <div class=\"row\">\n                    <div class=\"col-md-6 credit-card-hide\">\n                        <div class=\"card-container\">\n\n                        </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <div class=\"content-group\">\n                            <div *ngIf=\"!companyNameSelected\" class=\"lable required\">Cardholder's name\n                            </div>\n                            <div *ngIf=\"companyNameSelected\" class=\"lable required\">Company name</div>\n                            <input class=\"field\" type=\"text\" card-name formControlName=\"cardName\" (keyup)=\"keypress()\">\n                            <div *ngIf=\"!companyNameSelected\" class=\"company-name-link\" (click)=\"companyNameClick()\">Or\n                                click here to use a company name</div>\n                            <div *ngIf=\"companyNameSelected\" class=\"company-name-link\" (click)=\"companyNameClick()\">Or\n                                click here to use your personal information</div>\n                        </div>\n                        <div class=\"content-group\">\n                            <div class=\"lable required\">Card number</div>\n                            <input class=\"field\" type=\"tel\" autocomplete=\"cc-number\" card-number\n                                formControlName=\"cardNumber\" maxlength=\"19\" placeholder=\"xxxx xxxx xxxx xxxx\"\n                                (keyup)=\"setCardType()\" [class.error_field]=\"!isCardNumberLength\">\n                            <img *ngIf=\"cardLogo\" class=\"icon-align\" src=\"{{cardImg}}\" (error)=\"defaultCard()\"\n                                alt=\"card name\">\n                        </div>\n                        <div class=\"row row-group\">\n                            <div class=\"col content-group\">\n                                <div class=\"lable required\">CVC</div>\n                                <input class=\"field\" type=\"password\" autocomplete=\"new-password\" pattern=\"[0-9]*\"\n                                    inputmode=\"numeric\" card-cvc placeholder=\"xxx\" formControlName=\"cardCvc\"\n                                    (keyup)=\"keypress()\">\n                            </div>\n                            <div class=\"col content-group\">\n                                <div class=\"lable required\">Exp date</div>\n                                <input class=\"field\" type=\"tel\" autocomplete=\"cc-exp\" card-expiry\n                                    formControlName=\"expiry\" placeholder=\"MM / YY\" (keyup)=\"keypress()\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"content-group\" style=\"margin-bottom: 0;\">\n                    <div class=\"lable required\">Email address</div>\n                    <input class=\"field\" formControlName=\"email\" type=\"email\" (keyup)=\"keypress()\">\n                    <div class=\"email-info\">This email will only be used to keep you updated about their payments</div>\n                </div>\n            </ng-container>\n        </form>\n    </div>\n    <div *ngIf=\"portalName == 'AcceptProposal'\">\n        <form [formGroup]=\"creditForm\" card container=\".card-container\" [card-width]=\"410\" [messages]=\"messages\"\n            [placeholders]=\"placeholders\" [masks]=\"masks\" [formatting]=\"formatting\" [debug]=\"debug\">\n            <div class=\"row\">\n                <div class=\"col-md-6 credit-card-hide\">\n                    <div class=\"card-container\">\n\n                    </div>\n                </div>\n                <div class=\"col-md-6\">\n                    <div class=\"content-group\">\n                        <div *ngIf=\"!companyNameSelected\" class=\"lable required\">Cardholder's name\n                        </div>\n                        <div *ngIf=\"companyNameSelected\" class=\"lable required\">Company name</div>\n                        <input class=\"field\" type=\"text\" card-name formControlName=\"cardName\" (keyup)=\"keypress()\">\n                        <div *ngIf=\"!companyNameSelected\" class=\"company-name-link\" (click)=\"companyNameClick()\">Or\n                            click here to use a company name</div>\n                        <div *ngIf=\"companyNameSelected\" class=\"company-name-link\" (click)=\"companyNameClick()\">Or click\n                            here to use your personal information</div>\n                    </div>\n                    <div class=\"content-group\">\n                        <div class=\"lable required\">Card number</div>\n                        <input class=\"field\" type=\"tel\" autocomplete=\"cc-number\" card-number\n                            formControlName=\"cardNumber\" maxlength=\"19\" placeholder=\"xxxx xxxx xxxx xxxx\"\n                            (keyup)=\"setCardType()\" [class.error_field]=\"!isCardNumberLength\">\n                        <img *ngIf=\"cardLogo\" class=\"icon-align\" src=\"{{cardImg}}\" (error)=\"defaultCard()\"\n                            alt=\"card name\">\n                    </div>\n                    <div class=\"row row-group\">\n                        <div class=\"col content-group\">\n                            <div class=\"lable required\">CVC</div>\n                            <input class=\"field\" type=\"password\" autocomplete=\"new-password\" pattern=\"[0-9]*\"\n                                inputmode=\"numeric\" card-cvc placeholder=\"xxx\" formControlName=\"cardCvc\"\n                                (keyup)=\"keypress()\">\n                        </div>\n                        <div class=\"col content-group\">\n                            <div class=\"lable required\">Exp date</div>\n                            <input class=\"field\" type=\"tel\" autocomplete=\"cc-exp\" card-expiry formControlName=\"expiry\"\n                                placeholder=\"MM / YY\" (keyup)=\"keypress()\">\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"content-group\" style=\"margin-bottom: 0;\">\n                <div class=\"lable required\">Email address</div>\n                <input class=\"field\" formControlName=\"email\" type=\"email\" (keyup)=\"keypress()\">\n                <div class=\"email-info\">This email will only be used to keep you updated about their payments</div>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { CommonPaymentService } from '../serivces/common-payment.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'lib-payment-complete',\n  templateUrl: './payment-complete.component.html',\n  styleUrls: ['./payment-complete.component.scss']\n})\nexport class PaymentCompleteComponent implements OnInit {\n\n  @Input() valid:boolean=false;\n  @Input() cardDetails:any;\n  @Input() completePageDetails:any;\n  pending: boolean=true;\n  userResponse: any;\n  paymentCharges: any;\n  cardImg: string='';\n  paymentFailed: boolean = false;\n  loading:boolean=false;\n  completePaymentData:any;\n  items:any;\n  balance:number=0;\n  tip:number=0;\n  uuid:any;\n  amount:number=0;\n  paymentType:string = '';\n\n  @Output() close:EventEmitter<boolean> = new EventEmitter<boolean>();\n  cardCharges:any;\n  cardCharge: number=0;\n\n\n  constructor(private commonPaymentService:CommonPaymentService,private activatedRoute: ActivatedRoute) { \n    this.activatedRoute.queryParams.subscribe(params => {\n      this.cardCharge = parseFloat(params['cardCharges']); \n  });\n  }\n\n  ngOnInit(): void {\n   this.cardCharges = this.completePageDetails.cardCharges[this.commonPaymentService.cardCharges].charge\n   this.loading = false;\n   console.log('completePaymentData',this.valid,this.completePageDetails);\n   \n    if((this.completePageDetails.paymentDetails?.cardlat4 || this.cardDetails) && this.valid){\n      this.pending=false;\n    }else{\n      this.pending=false;\n    }\n  }\n\n}\n","<div class=\"page-class feedback-sent\">\n\n    <div *ngIf=\"!loading\" class=\"logo\"> <i class=\"fa-solid fa-check\"></i></div><br>\n    <div *ngIf=\"loading\" class=\"skeleton-box\" style=\"width:124px;height: 124px;margin: 0 auto;\"></div>\n    <div  class=\"feedback-title\"> Payment successful </div>\n    <div  class=\"feedback-message col-sm-12 col-md-8 col-lg-6\"> The final payment was made\n        on the {{completePageDetails?.paymentDetails.lastPaidDate}} </div>\n</div>\n\n<div class=\"page-class\" [class.remove-padding]=\"valid\" style=\"min-height:460px;\">\n\n    <div class=\"row row-align\" [class.remove-padding]=\"valid\">\n        <div class=\"col-12 col-sm-12 col-md-6 feedback-comment pad-box\" [class.remove-padding] = \"valid\" ></div>\n        <div class=\"col-12 col-sm-12 col-md-6 feedback-comment payment-summary\">\n\n            <div class=\"order-summary pad-box\">\n                <div *ngIf=\"!loading\" class=\"feedback-appointment\"> Order summary </div>\n                <div *ngIf=\"loading\" class=\"skeleton-box\" style=\"width:300px;height: 20px;margin-bottom: 10px;\">\n                </div>\n                <div>\n                    <div *ngIf=\"!loading\" class=\"row feedback-appointment-message\">\n                        <div class=\"col lable\">Sub total</div>\n                        <div class=\"col value\">{{completePageDetails.currencySymbol}}{{completePageDetails.invoiceDetails.total}}</div>\n                    </div>\n                    <div *ngIf=\"!loading\" class=\"row feedback-appointment-message\">\n                        <div class=\"col lable\">{{completePageDetails.taxLabel}}</div>\n                        <div class=\"col value\">{{completePageDetails.currencySymbol}}{{completePageDetails.invoiceDetails.taxes}}</div>\n                    </div>\n                    <div *ngIf=\"!loading && ((completePageDetails.cardCharges.length > 0 && cardCharges != 0) || cardCharges > 0)\"class=\"row feedback-appointment-message\">\n                        <div class=\"col lable\">Card charge</div>\n                        <div class=\"col value\">{{completePageDetails.currencySymbol}}{{paymentType ? ((cardCharges / 100) * completePageDetails.paymentDetails.amountToBePaid):(cardCharge)}}</div>\n                    </div>\n                    <div class=\"row width-f H-line\"></div>\n                    <div *ngIf=\"!loading\" class=\"row feedback-appointment-message\">\n                        <div class=\"col lable\">Grand total</div>\n                        <div class=\"col value\" style=\"color: var(--positiveFoundation);\">\n                            {{completePageDetails.currencySymbol}}{{completePageDetails.invoiceDetails.grandTotal+\n                            (paymentCharges?paymentCharges:(completePageDetails.paymentDetails?.cardBrand ||\n                            cardDetails?.cardCompany?((cardCharges /\n                            100) * completePageDetails.paymentDetails.paidAmount):0))}}</div>\n                    </div>\n                </div>\n                <div *ngIf=\"loading\" class=\"skeleton-box\" style=\"width:166px;height: 20px;\">\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { CommonPaymentService } from '../serivces/common-payment.service';\n\n@Component({\n  selector: 'lib-payment-details',\n  templateUrl: './payment-details.component.html',\n  styleUrls: ['./payment-details.component.scss']\n})\nexport class PaymentDetailsComponent implements OnInit {\n\n  paymentMethodType: any = 'Bank transfer';\n  paymentEnable: any;\n  settings: any;\n  devicePayment: boolean=false;\n  clientTelephone: any;\n  testResult: any=\"testResult\";\n  postCode: any;\n  isGocardlessEnabled: any;\n  paymentOption: any;\n  valid(paymentEnable: any) {\n    this.paymentEnable = paymentEnable;\n    this.payEmitter.emit(paymentEnable);\n  }\n  @Input() genericPaymentDetails:any;\n  @Input() tip: any;\n  @Input() total:number=0;\n  @Input() paymentSelectedOptions:any;\n  paymentMethodAllowed: any = 3;\n  paymentMethod: any = 1;\n  paymentCompleted: boolean = true;\n  canDoWalletPay: boolean = false;\n  walletPayLogoName: string = '';\n  walletPayDesc: string = '';\n  walletDetails: any;\n  amountToBePaid:any;\n  pendingAmount:any;\n  portalName:any;\n\n  @Output() emitter: EventEmitter<string> = new EventEmitter<string>();\n  @Output() payEmitter: EventEmitter<any> = new EventEmitter<any>();\n  @Output() payOptionEmitter: EventEmitter<any> = new EventEmitter<any>();\n\n\n\n  constructor(private commonService:CommonPaymentService) { }\n\n  ngOnInit(): void {    \n    this.commonService.userUrl$.subscribe((res:any)=>{\n      this.portalName = res?.portal;\n    });\n    this.commonService.paymentDetails$.subscribe((response:any)=>{\n      this.genericPaymentDetails = response;\n    })\n    console.log('portalname',this.portalName);\n    console.log('statemtn',this.genericPaymentDetails);\n    if(this.commonService.apiUrl?.portal == 'InvoicePortal'){\n      this.amountToBePaid = this.genericPaymentDetails.paymentDetails.amountToBePaid;\n      this.pendingAmount = this.genericPaymentDetails.paymentDetails.pendingAmount\n      this.paymentCompleted = (this.amountToBePaid - this.genericPaymentDetails.paymentDetails.pendingAmount) < 1;\n      this.paymentMethod = this.genericPaymentDetails.isGocardlessEnabled && this.genericPaymentDetails.customerDetails.postcode ?1:(this.genericPaymentDetails.cardIntegration && this.genericPaymentDetails.cardCharges != -1 && (this.genericPaymentDetails.isBasysEnabled || this.genericPaymentDetails.isPayFortEnabled || this.genericPaymentDetails.isStripeEnabled || this.genericPaymentDetails.isWorldPayEnbled )   &&  (!this.settings.cardEnable|| this.settings.cardEnable =='Always'|| this.genericPaymentDetails.invoiceDetails.total + this.genericPaymentDetails.invoiceDetails.taxes + this.genericPaymentDetails.invoiceDetails.total*(this.tip/100) + (this.genericPaymentDetails.cardCharges[this.genericPaymentDetails.cardCharges].charge / 100) * (this.genericPaymentDetails.invoiceDetails.total + this.genericPaymentDetails.invoiceDetails.taxes + this.genericPaymentDetails.invoiceDetails.total*(this.tip/100)) <= this.settings.creditDebitCard))?2:0;\n      this.clientTelephone = this.genericPaymentDetails.clientDetails.countrycode + this.genericPaymentDetails.clientDetails.telephone;\n    }else if(this.commonService.apiUrl?.portal == 'StatementPortal'){\n      this.paymentMethod = this.genericPaymentDetails.isGocardlessEnabled && this.genericPaymentDetails.customerDetails.postcode?1:(this.genericPaymentDetails.cardIntegration && (this.genericPaymentDetails.isStripeEnabled || this.genericPaymentDetails.isWorldPayEnbled || this.genericPaymentDetails.isPayFort) && (this.settings.cardEnable == undefined ||(this.settings.cardEnable !='No' && (this.settings.cardEnable =='Always'|| this.total <= this.settings.creditDebitCard))))?2:0;\n      this.clientTelephone = this.genericPaymentDetails.client_telephone\n    }\n    this.isGocardlessEnabled = this.genericPaymentDetails.isGocardlessEnabled;\n    this.postCode = this.genericPaymentDetails?.customerDetails?.postcode ? this.genericPaymentDetails?.customerDetails.postcode : this.genericPaymentDetails['postcode'];\n    this.commonService.setUserResponse(this.genericPaymentDetails,'');\n    \n    if(\"settings\" in this.genericPaymentDetails){\n      this.settings = this.genericPaymentDetails.settings.reduce((obj: any, item: any) => Object.assign(obj, { [item.key]: item.value }), {});\n      this.paymentMethodType = this.settings.countryRegion== 6 ? 'ACH' : 'Bank transfer';\n    }else{\n      this.paymentMethodType = this.genericPaymentDetails.countryRegion == 6 ? 'ACH' : 'Bank transfer';\n    }\n    \n    setTimeout(() => {\n      this.paymentSelected(this.paymentMethod)\n    }, 100);\n    this.emitter.emit(this.paymentMethodType);\n    \n    \n  }\n\n  changePaymentOption(option : string,selected:any){\n    this.paymentOption = option;\n    if (selected == true){\n      if(this.paymentOption == 'debit'){\n        this.payOptionEmitter.emit('debit');\n      }else if(this.paymentOption == 'credit'){ \n        this.payOptionEmitter.emit('credit');\n      }\n    }\n  }\n\n  paymentSelected(value: any) {\n    var temp = this.paymentMethod != value\n    if (value > 0) {\n        this.paymentMethod = value;\n        this.emitter.emit(value);\n        var check = document.getElementById(value) as HTMLInputElement\n        if (check) {\n            check.checked = true;\n        }\n        if (temp) {\n            this.payEmitter.emit(true);\n        }\n    }\n}\n\n}\n","<div class=\"row pay-body\">\n    <div class=\"pay-title-box\">\n        <div class=\"pay-title\">Payment details</div>\n        <div class=\"pay-details\">\n            <span *ngIf=\"portalName == 'InvoicePortal' && (amountToBePaid - (pendingAmount ? pendingAmount : 0)) >0\">Please fill the information below about your payment method</span>\n            <span *ngIf=\"portalName == 'StatementPortal' || portalName == 'AcceptProposal'\">Please fill the information below about your payment method</span>\n        </div>\n        <div class=\"pay-details\" *ngIf=\"portalName == 'InvoicePortal' && (amountToBePaid - (pendingAmount ? pendingAmount : 0)) <= 0\">\n            Payment status and summary information</div>\n    </div>\n    <div class=\"pay-selection\" *ngIf=\"(amountToBePaid - pendingAmount) >0 || portalName == 'StatementPortal' || portalName == 'AcceptProposal'\">\n\n        <div class=\"col pay-width\">Pay with</div>\n        <div class=\"row width-q\">\n            <div *ngIf=\"isGocardlessEnabled && postCode\" class=\"col pay-btn\" (click)=\"paymentSelected(1)\" [ngClass]=\"{'pay-btn-active' : paymentMethod == '1'}\">\n                <div *ngIf=\"portalName == 'AcceptProposal'\"><input type=\"radio\" name=\"payWith\" id=\"1\" (click)=\"changePaymentOption('debit',true)\" [checked]=\"paymentSelectedOptions=='debit'\"></div>\n                <div *ngIf=\"portalName != 'AcceptProposal'\"><input type=\"radio\" name=\"payWith\" id=\"1\"></div>\n                <span\n                    class=\"pay-btn-text\">{{paymentMethodType }}</span>\n                    <svg width=\"20\" height=\"16\" viewBox=\"0 0 20 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M13 10V7H16V5L20 8.5L16 12V10H13ZM12 3.7V5H0V3.7L6 0L12 3.7ZM5 6H7V11H5V6ZM1 6H3V11H1V6ZM11 6V8.5L9 10.3V6H11ZM7.1 12L6.5 12.5L8.2 14H0V12H7.1ZM15 11V14H12V16L8 12.5L12 9V11H15Z\" fill=\"#505B65\"/>\n                        </svg>\n                        \n            </div>\n            <div class=\"col pay-btn\" (click)=\"paymentSelected(2)\" [ngClass]=\"{'pay-btn-active' : paymentMethod == '2'}\">\n                <div *ngIf=\"portalName == 'AcceptProposal'\"><input type=\"radio\" name=\"payWith\" id=\"1\" (click)=\"changePaymentOption('credit',true)\" [checked]=\"paymentSelectedOptions=='credit'\"></div>\n                <div *ngIf=\"portalName != 'AcceptProposal'\"><input type=\"radio\" name=\"payWith\" id=\"1\"></div>\n                <span\n                    class=\"pay-btn-text\">Debit or credit card</span>\n                    <svg width=\"20\" height=\"14\" viewBox=\"0 0 20 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path d=\"M17 0H3C2.20435 0 1.44129 0.316071 0.87868 0.87868C0.316071 1.44129 0 2.20435 0 3V11C0 11.7956 0.316071 12.5587 0.87868 13.1213C1.44129 13.6839 2.20435 14 3 14H17C17.7956 14 18.5587 13.6839 19.1213 13.1213C19.6839 12.5587 20 11.7956 20 11V3C20 2.20435 19.6839 1.44129 19.1213 0.87868C18.5587 0.316071 17.7956 0 17 0ZM9 10H5C4.73478 10 4.48043 9.89464 4.29289 9.70711C4.10536 9.51957 4 9.26522 4 9C4 8.73478 4.10536 8.48043 4.29289 8.29289C4.48043 8.10536 4.73478 8 5 8H9C9.26522 8 9.51957 8.10536 9.70711 8.29289C9.89464 8.48043 10 8.73478 10 9C10 9.26522 9.89464 9.51957 9.70711 9.70711C9.51957 9.89464 9.26522 10 9 10ZM15 10H13C12.7348 10 12.4804 9.89464 12.2929 9.70711C12.1054 9.51957 12 9.26522 12 9C12 8.73478 12.1054 8.48043 12.2929 8.29289C12.4804 8.10536 12.7348 8 13 8H15C15.2652 8 15.5196 8.10536 15.7071 8.29289C15.8946 8.48043 16 8.73478 16 9C16 9.26522 15.8946 9.51957 15.7071 9.70711C15.5196 9.89464 15.2652 10 15 10ZM18 4H2V3C2 2.73478 2.10536 2.48043 2.29289 2.29289C2.48043 2.10536 2.73478 2 3 2H17C17.2652 2 17.5196 2.10536 17.7071 2.29289C17.8946 2.48043 18 2.73478 18 3V4Z\" fill=\"#505B65\"/>\n                    </svg>\n                    </div>\n            <!-- <div *ngIf=\"userData.isStripeEnabled && userData.isWalletPayEnabled && canDoWalletPay\" class=\"col pay-btn\"\n                [ngClass]=\"{'pay-btn-active' : paymentMethod == '3'}\" (click)=\"paymentSelected(3)\"><input type=\"radio\"\n                    name=\"payWith\" id=\"3\"><span class=\"pay-btn-text\">{{ walletPayDesc }}</span><img\n                    class=\"icon-align\" src=\"\" alt=\"\">\n            </div> -->\n\n        </div>\n        <lib-payment-bank-details *ngIf=\"paymentMethod == '1' && isGocardlessEnabled && postCode\" [paymentTypeS]=\"paymentMethodType\" (payEmitter)=\"valid($event)\"\n            [paymentData]=\"genericPaymentDetails\"></lib-payment-bank-details>\n        <lib-payment-card-details *ngIf=\"(portalName == 'StatementPortal' && paymentMethod == '2') || (portalName == 'AcceptProposal' && paymentMethod == '2') || (portalName == 'InvoicePortal' && paymentMethod == '2' && genericPaymentDetails.cardIntegration && (genericPaymentDetails.isBasysEnabled || genericPaymentDetails.isPayFortEnabled || genericPaymentDetails.isStripeEnabled || genericPaymentDetails.isWorldPayEnbled )  && genericPaymentDetails.cardCharges.length != 0 &&  ( !settings.cardEnable || settings.cardEnable =='Always'|| genericPaymentDetails.invoiceDetails.total + genericPaymentDetails.invoiceDetails.taxes + genericPaymentDetails.invoiceDetails.total*(tip/100) <= settings.creditDebitCard))\" [cardPaymentData]=\"genericPaymentDetails\"\n            (payEmitter)=\"valid($event)\"></lib-payment-card-details>\n    </div>\n    <div class=\"(portalName == 'StatementPortal' || portalName == 'InvoicePortal') && paymentCompleted\" *ngIf=\"(amountToBePaid - pendingAmount)  <= 0\">\n        <lib-payment-complete [valid]=\"paymentCompleted\"\n            [completePageDetails]=\"genericPaymentDetails\"></lib-payment-complete>\n    </div>\n</div>\n<div class=\"row pay-body error-body\" *ngIf=\"paymentMethod == 0\">\n    <span *ngIf=\"settings.cardEnable =='Always' || total <= settings.creditDebitCard\" style=\"display: none\">\n        <span\n            *ngIf=\"paymentMethod != '0' ? '':paymentSelected((genericPaymentDetails.isGocardlessEnabled && genericPaymentDetails.customerDetails.postcode)?1:(genericPaymentDetails.cardIntegration && settings.cardEnable !='No' && (settings.cardEnable =='Always'|| total <= settings.creditDebitCard))?2:0)\"></span>\n    </span>\n    <div class=\"error-title\">\n        <div class=\"logo\"><img class=\"fa-check\" src=\"assets/icon/warning.svg\" alt=\"link-invalid\"></div>\n        <div>'We`re unable to process a payment. Please contact {{clientTelephone}}  for assistance'\n        </div>\n    </div>\n</div>","import { Component, Input, OnInit, Output,EventEmitter } from '@angular/core';\nimport { CommonPaymentService } from '../public-api';\n\n@Component({\n  selector: 'lib-parentpayment',\n  template: `\n      <lib-payment-details [genericPaymentDetails]=\"paymentDetails\" (payEmitter)=\"valid($event)\" [paymentSelectedOptions]=\"paymentSelectedOptions\" (payOptionEmitter)=\"payOptionsChecked($event)\" (emitter)=\"selectPaymentMethod($event)\"></lib-payment-details>\n  `,\n  styles: []\n})\nexport class ParentpaymentComponent implements OnInit {\n\n  @Input() paymentDetails:any;\n  @Output() commonPaymentEnableEmitter = new EventEmitter<string>();\n  @Output() commonSelectPaymentMethodEmitter = new EventEmitter<string>();\n  @Output() selectPaymentMethodEmitter = new EventEmitter<string>();\n  @Input() apiUrl:any;\n  @Input() paymentSelectedOptions:any;\n\n  valid(paymentEnable:any){\n    console.log('paymentEnable',paymentEnable);\n    this.commonPaymentEnableEmitter.emit(paymentEnable);\n  }\n\n  payOptionsChecked(payOptions:any){\n    console.log('payOPtions',payOptions);\n    this.selectPaymentMethodEmitter.emit(payOptions);\n  }\n\n  selectPaymentMethod(paymentMethod:any){\n    console.log('paymentMethod',paymentMethod);\n    this.commonSelectPaymentMethodEmitter.emit(paymentMethod);  \n  }\n\n  constructor(private commonService:CommonPaymentService) { }\n\n  ngOnInit(): void {\n      this.commonService.getApiUrl(this.apiUrl);\n      this.commonService.setPaymentDetails(this.paymentDetails);\n  }\n\n}\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { registerLocaleData,CommonModule } from '@angular/common';\nimport localeFr from '@angular/common/locales/fr';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule,FormsModule } from '@angular/forms';\nimport { CardModule } from 'ngx-card';\nimport { CreditCardDirectivesModule } from 'angular-cc-library';\n\n\nimport { ParentpaymentComponent } from './parentpayment.component';\nimport { PaymentDetailsComponent } from './payment-details/payment-details.component';\nimport { PaymentBankDetailsComponent } from './payment-details/payment-bank-details/payment-bank-details.component';\nimport { PaymentCardDetailsComponent } from './payment-details/payment-card-details/payment-card-details.component';\nimport { PaymentCompleteComponent } from './payment-complete/payment-complete.component';\n\n\n@NgModule({\n  declarations: [\n    ParentpaymentComponent,\n    PaymentDetailsComponent,\n    PaymentBankDetailsComponent,\n    PaymentCardDetailsComponent,\n    PaymentCompleteComponent\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    CardModule,\n    CreditCardDirectivesModule\n  ],\n  schemas:[\n    CUSTOM_ELEMENTS_SCHEMA\n  ],\n  exports: [\n    ParentpaymentComponent\n  ]\n})\nexport class ParentpaymentModule { }\n","/*\n * Public API Surface of parentpayment\n */\n\nexport * from './lib/parentpayment.service';\nexport * from './lib/parentpayment.component';\nexport * from './lib/parentpayment.module';\nexport * from './lib/payment-details/payment-details.component';\nexport * from './lib/payment-details/payment-bank-details/payment-bank-details.component';\nexport * from  './lib/payment-details/payment-card-details/payment-card-details.component';\nexport * from './lib/payment-complete/payment-complete.component';\nexport * from './lib/serivces/common-payment.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0","Injectable","BehaviorSubject","i1","EventEmitter","Validators","i2.CommonPaymentService","i3","Component","Input","Output","CreditCardValidators","i4","i1.CommonPaymentService","i2","i2.PaymentBankDetailsComponent","i3.PaymentCardDetailsComponent","i4.PaymentCompleteComponent","i5","i2.PaymentDetailsComponent","CommonModule","HttpClientModule","ReactiveFormsModule","FormsModule","CardModule","CreditCardDirectivesModule","NgModule","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"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"}