import { Component, Output, EventEmitter, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../serivces/common-payment.service";
import * as i2 from "./payment-bank-details/payment-bank-details.component";
import * as i3 from "./payment-card-details/payment-card-details.component";
import * as i4 from "../payment-complete/payment-complete.component";
import * as i5 from "@angular/common";
export class PaymentDetailsComponent {
    constructor(commonService) {
        this.commonService = commonService;
        this.paymentMethodType = 'Bank transfer';
        this.devicePayment = false;
        this.testResult = "testResult";
        this.total = 0;
        this.paymentMethodAllowed = 3;
        this.paymentMethod = 1;
        this.paymentCompleted = true;
        this.canDoWalletPay = false;
        this.walletPayLogoName = '';
        this.walletPayDesc = '';
        this.emitter = new EventEmitter();
        this.payEmitter = new EventEmitter();
    }
    valid(paymentEnable) {
        this.paymentEnable = paymentEnable;
        this.payEmitter.emit(paymentEnable);
    }
    ngOnInit() {
        var _a, _b;
        this.commonService.userUrl$.subscribe((res) => {
            this.portalName = res.portal;
        });
        this.commonService.paymentDetails$.subscribe((response) => {
            this.genericPaymentDetails = response;
        });
        console.log('portalname', this.portalName);
        console.log('statemtn', this.genericPaymentDetails);
        if (((_a = this.commonService.apiUrl) === null || _a === void 0 ? void 0 : _a.portal) == 'InvoicePortal') {
            this.amountToBePaid = this.genericPaymentDetails.paymentDetails.amountToBePaid;
            this.pendingAmount = this.genericPaymentDetails.paymentDetails.pendingAmount;
            this.paymentCompleted = (this.amountToBePaid - this.genericPaymentDetails.paymentDetails.pendingAmount) < 1;
            this.paymentMethod = this.genericPaymentDetails.isGocardlessEnabled && this.genericPaymentDetails.customerDetails.postcode ? 1 : (this.genericPaymentDetails.cardIntegration && this.genericPaymentDetails.cardCharges != -1 && (this.genericPaymentDetails.isBasysEnabled || this.genericPaymentDetails.isPayFortEnabled || this.genericPaymentDetails.isStripeEnabled || this.genericPaymentDetails.isWorldPayEnbled) && (!this.settings.cardEnable || this.settings.cardEnable == 'Always' || this.genericPaymentDetails.invoiceDetails.total + this.genericPaymentDetails.invoiceDetails.taxes + this.genericPaymentDetails.invoiceDetails.total * (this.tip / 100) + (this.genericPaymentDetails.cardCharges[this.genericPaymentDetails.cardCharges].charge / 100) * (this.genericPaymentDetails.invoiceDetails.total + this.genericPaymentDetails.invoiceDetails.taxes + this.genericPaymentDetails.invoiceDetails.total * (this.tip / 100)) <= this.settings.creditDebitCard)) ? 2 : 0;
        }
        else if (((_b = this.commonService.apiUrl) === null || _b === void 0 ? void 0 : _b.portal) == 'StatementPortal') {
            this.paymentMethod = this.genericPaymentDetails.isGocardlessEnabled && this.genericPaymentDetails.customerDetails.postcode ? 1 : (this.genericPaymentDetails.cardIntegration && (this.genericPaymentDetails.isStripeEnabled || this.genericPaymentDetails.isWorldPayEnbled || this.genericPaymentDetails.isPayFort) && (this.settings.cardEnable == undefined || (this.settings.cardEnable != 'No' && (this.settings.cardEnable == 'Always' || this.total <= this.settings.creditDebitCard)))) ? 2 : 0;
        }
        this.commonService.setUserResponse(this.genericPaymentDetails, '');
        this.settings = this.genericPaymentDetails.settings.reduce((obj, item) => Object.assign(obj, { [item.key]: item.value }), {});
        setTimeout(() => {
            this.paymentSelected(this.paymentMethod);
        }, 100);
        this.paymentMethodType = this.settings.countryRegion == 6 ? 'ACH' : 'Bank transfer';
        this.emitter.emit(this.paymentMethodType);
        this.clientTelephone = this.genericPaymentDetails.clientDetails.countrycode + this.genericPaymentDetails.clientDetails.telephone;
    }
    paymentSelected(value) {
        var temp = this.paymentMethod != value;
        if (value > 0) {
            this.paymentMethod = value;
            this.emitter.emit(value);
            var check = document.getElementById(value);
            if (check) {
                check.checked = true;
            }
            if (temp) {
                this.payEmitter.emit(true);
            }
        }
    }
}
PaymentDetailsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: PaymentDetailsComponent, deps: [{ token: i1.CommonPaymentService }], target: i0.ɵɵFactoryTarget.Component });
PaymentDetailsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: PaymentDetailsComponent, selector: "lib-payment-details", inputs: { genericPaymentDetails: "genericPaymentDetails", tip: "tip", total: "total" }, outputs: { emitter: "emitter", payEmitter: "payEmitter" }, ngImport: i0, template: "<div class=\"row pay-body\">\n    <div class=\"pay-title-box\">\n        <div class=\"pay-title\">Payment details</div>\n        <div class=\"pay-details\">\n            <span *ngIf=\"portalName == 'InvoicePortal' && (amountToBePaid - (pendingAmount ? pendingAmount : 0)) >0\">Please fill the information below about your payment method</span>\n            <span *ngIf=\"portalName == 'StatementPortal'\">Please fill the information below about your payment method</span>\n        </div>\n        <div class=\"pay-details\"\n            *ngIf=\"portalName == 'InvoicePortal' && (amountToBePaid - (pendingAmount ? pendingAmount : 0)) <= 0\">\n            Payment status and summary information</div>\n    </div>\n    <div class=\"pay-selection\"\n        *ngIf=\"(amountToBePaid - pendingAmount) >0\">\n\n        <div class=\"col pay-width\">Pay with</div>\n        <div class=\"row width-q\">\n            <div class=\"col pay-btn\" (click)=\"paymentSelected(1)\"><input type=\"radio\" name=\"payWith\" id=\"1\"><span\n                    class=\"pay-btn-text\">{{paymentMethodType }}</span>\n                <img class=\"icon-align\" src=\"assets/icon/bank-transfer.svg\" alt=\"\">\n            </div>\n            <div class=\"col pay-btn\" (click)=\"paymentSelected(2)\"><input type=\"radio\" name=\"payWith\" id=\"2\"><span\n                    class=\"pay-btn-text\">Debit or credit card</span><img class=\"icon-align\" src=\"assets/icon/card.svg\"\n                    alt=\"\"></div>\n            <!-- <div *ngIf=\"userData.isStripeEnabled && userData.isWalletPayEnabled && canDoWalletPay\" class=\"col pay-btn\"\n                [ngClass]=\"{'pay-btn-active' : paymentMethod == '3'}\" (click)=\"paymentSelected(3)\"><input type=\"radio\"\n                    name=\"payWith\" id=\"3\"><span class=\"pay-btn-text\">{{ walletPayDesc }}</span><img\n                    class=\"icon-align\" src=\"\" alt=\"\">\n            </div> -->\n\n        </div>\n        <lib-payment-bank-details\n            *ngIf=\"paymentMethod == '1' && genericPaymentDetails.isGocardlessEnabled && (genericPaymentDetails.settings.countryRegion == 6 || genericPaymentDetails.customerDetails.postcode)\"\n            [paymentTypeS]=\"paymentMethodType\" (payEmitter)=\"valid($event)\" [paymentData]=\"genericPaymentDetails\"></lib-payment-bank-details>\n        <lib-payment-card-details *ngIf=\"paymentMethod == '2'\" [cardPaymentData]=\"genericPaymentDetails\"\n            (payEmitter)=\"valid($event)\"></lib-payment-card-details>\n    </div>\n    <div class=\"paymentCompleted\"\n        *ngIf=\"(amountToBePaid - pendingAmount)  <= 0\">\n        <lib-payment-complete [valid]=\"paymentCompleted\"\n            [completePageDetails]=\"genericPaymentDetails\"></lib-payment-complete>\n    </div>\n</div>\n<div class=\"row pay-body error-body\" *ngIf=\"paymentMethod == 0\">\n    <div class=\"error-title\">\n        Oops. Sorry, we are unable to process your payment.\n    </div>\n    <div class=\"error-content\">\n        An error has occurred while attempting to process your order. Please try again or try another payment method.\n    </div>\n</div>", styles: [".pay-body{border:1px solid var(--primaryBorderColor);box-shadow:0 4px 8px #0000000a,0 0 2px #0000000f,0 0 1px #0000000a;border-radius:4px;margin:24px;overflow:hidden}.error-body{text-align:center;height:280px}.error-body .error-title{font-weight:700;font-size:14px;line-height:20px;color:#f2994a;padding-top:120px;padding-bottom:12px}.error-body .error-content{font-weight:400;font-size:12px;line-height:20px;color:var(--primaryTextColor)}.pay-title-box{background:var(--titleBarBackground);width:100%;padding:16px 24.5px}.pay-title{font-weight:700;font-size:16px;line-height:24px;color:var(--titleBarFontColor)}.pay-details{font-size:14px;line-height:20px;color:var(--titleBarSecondaryFontColour);padding-top:12px}.pay-selection{width:100%;padding:24px}.width-q{margin:0;grid-gap:24px;gap:24px}.pay-width{font-weight:700;font-size:16px;color:var(--primaryTextColor);padding-bottom:8px}.pay-btn{background:#FFFFFF;border:1px solid var(--primaryBorderColor);border-radius:4px;font-size:14px;color:var(--primaryTextColor);display:flex;align-items:center;cursor:pointer;margin-bottom:0;padding-right:18px}.pay-btn-active{border:1px solid var(--secondaryButtonColour)}.pay-btn-text{font-size:14px;color:var(--primaryTextColor);padding:8px 8px 8px 16px;width:95%}.icon-align{width:20px;height:19px}.paymentCompleted{padding:0}@media (max-width: 578px){.pay-body{margin:16px 0 0;border:none;box-shadow:none;border-radius:0}.pay-title-box{padding:22px 16px}.pay-selection{padding:16px}}@media (max-width: 784px){.pay-btn{min-width:100%;padding-right:16px;padding-left:12px}.width-q{grid-gap:12px;gap:12px}.pay-width{padding-bottom:12px}.pay-details{padding-top:8px}}\n"], components: [{ type: i2.PaymentBankDetailsComponent, selector: "lib-payment-bank-details", inputs: ["paymentData", "paymentTypeS"], outputs: ["payEmitter"] }, { type: i3.PaymentCardDetailsComponent, selector: "lib-payment-card-details", inputs: ["cardPaymentData"], outputs: ["payEmitter"] }, { type: i4.PaymentCompleteComponent, selector: "lib-payment-complete", inputs: ["valid", "cardDetails", "completePageDetails"], outputs: ["close"] }], directives: [{ type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: PaymentDetailsComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'lib-payment-details',
                    templateUrl: './payment-details.component.html',
                    styleUrls: ['./payment-details.component.scss']
                }]
        }], ctorParameters: function () { return [{ type: i1.CommonPaymentService }]; }, propDecorators: { genericPaymentDetails: [{
                type: Input
            }], tip: [{
                type: Input
            }], total: [{
                type: Input
            }], emitter: [{
                type: Output
            }], payEmitter: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGF5bWVudC1kZXRhaWxzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3BhcmVudHBheW1lbnQvc3JjL2xpYi9wYXltZW50LWRldGFpbHMvcGF5bWVudC1kZXRhaWxzLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3BhcmVudHBheW1lbnQvc3JjL2xpYi9wYXltZW50LWRldGFpbHMvcGF5bWVudC1kZXRhaWxzLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7QUFRL0UsTUFBTSxPQUFPLHVCQUF1QjtJQStCbEMsWUFBb0IsYUFBa0M7UUFBbEMsa0JBQWEsR0FBYixhQUFhLENBQXFCO1FBN0J0RCxzQkFBaUIsR0FBUSxlQUFlLENBQUM7UUFHekMsa0JBQWEsR0FBVSxLQUFLLENBQUM7UUFFN0IsZUFBVSxHQUFNLFlBQVksQ0FBQztRQU9wQixVQUFLLEdBQVEsQ0FBQyxDQUFDO1FBQ3hCLHlCQUFvQixHQUFRLENBQUMsQ0FBQztRQUM5QixrQkFBYSxHQUFRLENBQUMsQ0FBQztRQUN2QixxQkFBZ0IsR0FBWSxJQUFJLENBQUM7UUFDakMsbUJBQWMsR0FBWSxLQUFLLENBQUM7UUFDaEMsc0JBQWlCLEdBQVcsRUFBRSxDQUFDO1FBQy9CLGtCQUFhLEdBQVcsRUFBRSxDQUFDO1FBTWpCLFlBQU8sR0FBeUIsSUFBSSxZQUFZLEVBQVUsQ0FBQztRQUMzRCxlQUFVLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7SUFJUixDQUFDO0lBdkIzRCxLQUFLLENBQUMsYUFBa0I7UUFDdEIsSUFBSSxDQUFDLGFBQWEsR0FBRyxhQUFhLENBQUM7UUFDbkMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENB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QUFxQixDQUFDLG1CQUFtQixJQUFJLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFBLENBQUMsQ0FBQSxDQUFDLENBQUEsQ0FBQyxDQUFBLENBQUMsSUFBSSxDQUFDLHFCQUFxQixDQUFDLGVBQWUsSUFBSSxDQUFDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxlQUFlLElBQUksSUFBSSxDQUFDLHFCQUFxQixDQUFDLGdCQUFnQixJQUFJLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxJQUFJLFNBQVMsSUFBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxJQUFHLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxJQUFHLFFBQVEsSUFBRyxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFBLENBQUMsQ0FBQSxDQUFDLENBQUEsQ0FBQyxDQUFDO1NBQzVkO1FBQ0QsSUFBSSxDQUFDLGFBQWEsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLHFCQUFxQixFQUFDLEVBQUUsQ0FBQyxDQUFDO1FBRWxFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLHFCQUFxQixDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFRLEVBQUUsSUFBUyxFQUFFLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBRXhJLFVBQVUsQ0FBQyxHQUFHLEVBQUU7WUFDZCxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQTtRQUMxQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDUixJQUFJLENBQUMsaUJBQWlCLEdBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxhQUFhLElBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLGVBQWUsQ0FBQztRQUNsRixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUMxQyxJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxhQUFhLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDO0lBRW5JLENBQUM7SUFFRCxlQUFlLENBQUMsS0FBVTtRQUN4QixJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsYUFBYSxJQUFJLEtBQUssQ0FBQTtRQUN0QyxJQUFJLEtBQUssR0FBRyxDQUFDLEVBQUU7WUFDWCxJQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQztZQUMzQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUN6QixJQUFJLEtBQUssR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBcUIsQ0FBQTtZQUM5RCxJQUFJLEtBQUssRUFBRTtnQkFDUCxLQUFLLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQzthQUN4QjtZQUNELElBQUksSUFBSSxFQUFFO2dCQUNOLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQzlCO1NBQ0o7SUFDTCxDQUFDOztxSEE1RVksdUJBQXVCO3lHQUF2Qix1QkFBdUIsOE1DUnBDLG9rR0FpRE07NEZEekNPLHVCQUF1QjtrQkFMbkMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUscUJBQXFCO29CQUMvQixXQUFXLEVBQUUsa0NBQWtDO29CQUMvQyxTQUFTLEVBQUUsQ0FBQyxrQ0FBa0MsQ0FBQztpQkFDaEQ7MkdBYVUscUJBQXFCO3NCQUE3QixLQUFLO2dCQUNHLEdBQUc7c0JBQVgsS0FBSztnQkFDRyxLQUFLO3NCQUFiLEtBQUs7Z0JBWUksT0FBTztzQkFBaEIsTUFBTTtnQkFDRyxVQUFVO3NCQUFuQixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uUGF5bWVudFNlcnZpY2UgfSBmcm9tICcuLi9zZXJpdmNlcy9jb21tb24tcGF5bWVudC5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbGliLXBheW1lbnQtZGV0YWlscycsXG4gIHRlbXBsYXRlVXJsOiAnLi9wYXltZW50LWRldGFpbHMuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9wYXltZW50LWRldGFpbHMuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBQYXltZW50RGV0YWlsc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgcGF5bWVudE1ldGhvZFR5cGU6IGFueSA9ICdCYW5rIHRyYW5zZmVyJztcbiAgcGF5bWVudEVuYWJsZTogYW55O1xuICBzZXR0aW5nczogYW55O1xuICBkZXZpY2VQYXltZW50OiBib29sZWFuPWZhbHNlO1xuICBjbGllbnRUZWxlcGhvbmU6IGFueTtcbiAgdGVzdFJlc3VsdDogYW55PVwidGVzdFJlc3VsdFwiO1xuICB2YWxpZChwYXltZW50RW5hYmxlOiBhbnkpIHtcbiAgICB0aGlzLnBheW1lbnRFbmFibGUgPSBwYXltZW50RW5hYmxlO1xuICAgIHRoaXMucGF5RW1pdHRlci5lbWl0KHBheW1lbnRFbmFibGUpO1xuICB9XG4gIEBJbnB1dCgpIGdlbmVyaWNQYXltZW50RGV0YWlsczphbnk7XG4gIEBJbnB1dCgpIHRpcDogYW55O1xuICBASW5wdXQoKSB0b3RhbDpudW1iZXI9MDtcbiAgcGF5bWVudE1ldGhvZEFsbG93ZWQ6IGFueSA9IDM7XG4gIHBheW1lbnRNZXRob2Q6IGFueSA9IDE7XG4gIHBheW1lbnRDb21wbGV0ZWQ6IGJvb2xlYW4gPSB0cnVlO1xuICBjYW5Eb1dhbGxldFBheTogYm9vbGVhbiA9IGZhbHNlO1xuICB3YWxsZXRQYXlMb2dvTmFtZTogc3RyaW5nID0gJyc7XG4gIHdhbGxldFBheURlc2M6IHN0cmluZyA9ICcnO1xuICB3YWxsZXREZXRhaWxzOiBhbnk7XG4gIGFtb3VudFRvQmVQYWlkOmFueTtcbiAgcGVuZGluZ0Ftb3VudDphbnk7XG4gIHBvcnRhbE5hbWU6YW55O1xuXG4gIEBPdXRwdXQoKSBlbWl0dGVyOiBFdmVudEVtaXR0ZXI8c3RyaW5nPiA9IG5ldyBFdmVudEVtaXR0ZXI8c3RyaW5nPigpO1xuICBAT3V0cHV0KCkgcGF5RW1pdHRlcjogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuXG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjb21tb25TZXJ2aWNlOkNvbW1vblBheW1lbnRTZXJ2aWNlKSB7IH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHsgICAgXG4gICAgdGhpcy5jb21tb25TZXJ2aWNlLnVzZXJVcmwkLnN1YnNjcmliZSgocmVzOmFueSk9PntcbiAgICAgIHRoaXMucG9ydGFsTmFtZSA9IHJlcy5wb3J0YWw7XG4gICAgfSk7XG4gICAgdGhpcy5jb21tb25TZXJ2aWNlLnBheW1lbnREZXRhaWxzJC5zdWJzY3JpYmUoKHJlc3BvbnNlOmFueSk9PntcbiAgICAgIHRoaXMuZ2VuZXJpY1BheW1lbnREZXRhaWxzID0gcmVzcG9uc2U7XG4gICAgfSlcbiAgICBjb25zb2xlLmxvZygncG9ydGFsbmFtZScsdGhpcy5wb3J0YWxOYW1lKTtcbiAgICBjb25zb2xlLmxvZygnc3RhdGVtdG4nLHRoaXMuZ2VuZXJpY1BheW1lbnREZXRhaWxzKTtcbiAgICBpZih0aGlzLmNvbW1vblNlcnZpY2UuYXBpVXJsPy5wb3J0YWwgPT0gJ0ludm9pY2VQb3J0YWwnKXtcbiAgICAgIHRoaXMuYW1vdW50VG9CZVBhaWQgPSB0aGlzLmdlbmVyaWNQYXltZW50RGV0YWlscy5wYXltZW50RGV0YWlscy5hbW91bnRUb0JlUGFpZDtcbiAgICAgIHRoaXMucGVuZGluZ0Ftb3VudCA9IHRoaXMuZ2VuZXJpY1BheW1lbnREZXRhaWxzLnBheW1lbnREZXRhaWxzLnBlbmRpbmdBbW91bnRcbiAgICAgIHRoaXMucGF5bWVudENvbXBsZXRlZCA9ICh0aGlzLmFtb3VudFRvQmVQYWlkIC0gdGhpcy5nZW5lcmljUGF5bWVudERldGFpbHMucGF5bWVudERldGFpbHMucGVuZGluZ0Ftb3VudCkgPCAxO1xuICAgICAgdGhpcy5wYXltZW50TWV0aG9kID0gdGhpcy5nZW5lcmljUGF5bWVudERldGFpbHMuaXNHb2NhcmRsZXNzRW5hYmxlZCAmJiB0aGlzLmdlbmVyaWNQYXltZW50RGV0YWlscy5jdXN0b21lckRldGFpbHMucG9zdGNvZGUgPzE6KHRoaXMuZ2VuZXJpY1BheW1lbnREZXRhaWxzLmNhcmRJbnRlZ3JhdGlvbiAmJiB0aGlzLmdlbmVyaWNQYXltZW50RGV0YWlscy5jYXJkQ2hhcmdlcyAhPSAtMSAmJiAodGhpcy5nZW5lcmljUGF5bWVudERldGFpbHMuaXNCYXN5c0VuYWJsZWQgfHwgdGhpcy5nZW5lcmljUGF5bWVudERldGFpbHMuaXNQYXlGb3J0RW5hYmxlZCB8fCB0aGlzLmdlbmVyaWNQYXltZW50RGV0YWlscy5pc1N0cmlwZUVuYWJsZWQgfHwgdGhpcy5nZW5lcmljUGF5bWVudERldGFpbHMuaXNXb3JsZFBheUVuYmxlZCApICAgJiYgICghdGhpcy5zZXR0aW5ncy5jYXJkRW5hYmxlfHwgdGhpcy5zZXR0aW5ncy5jYXJkRW5hYmxlID09J0Fsd2F5cyd8fCB0aGlzLmdlbmVyaWNQYXltZW50RGV0YWlscy5pbnZvaWNlRGV0YWlscy50b3RhbCArIHRoaXMuZ2VuZXJpY1BheW1lbnREZXRhaWxzLmludm9pY2VEZXRhaWxzLnRheGVzICsgdGhpcy5nZW5lcmljUGF5bWVudERldGFpbHMuaW52b2ljZURldGFpbHMudG90YWwqKHRoaXMudGlwLzEwMCkgKyAodGhpcy5nZW5lcmljUGF5bWVudERldGFpbHMuY2FyZENoYXJnZXNbdGhpcy5nZW5lcmljUGF5bWVudERldGFpbHMuY2FyZENoYXJnZXNdLmNoYXJnZSAvIDEwMCkgKiAodGhpcy5nZW5lcmljUGF5bWVudERldGFpbHMuaW52b2ljZURldGFpbHMudG90YWwgKyB0aGlzLmdlbmVyaWNQYXltZW50RGV0YWlscy5pbnZvaWNlRGV0YWlscy50YXhlcyArIHRoaXMuZ2VuZXJpY1BheW1lbnREZXRhaWxzLmludm9pY2VEZXRhaWxzLnRvdGFsKih0aGlzLnRpcC8xMDApKSA8PSB0aGlzLnNldHRpbmdzLmNyZWRpdERlYml0Q2FyZCkpPzI6MDtcbiAgICB9ZWxzZSBpZih0aGlzLmNvbW1vblNlcnZpY2UuYXBpVXJsPy5wb3J0YWwgPT0gJ1N0YXRlbWVudFBvcnRhbCcpe1xuICAgICAgdGhpcy5wYXltZW50TWV0aG9kID0gdGhpcy5nZW5lcmljUGF5bWVudERldGFpbHMuaXNHb2NhcmRsZXNzRW5hYmxlZCAmJiB0aGlzLmdlbmVyaWNQYXltZW50RGV0YWlscy5jdXN0b21lckRldGFpbHMucG9zdGNvZGU/MToodGhpcy5nZW5lcmljUGF5bWVudERldGFpbHMuY2FyZEludGVncmF0aW9uICYmICh0aGlzLmdlbmVyaWNQYXltZW50RGV0YWlscy5pc1N0cmlwZUVuYWJsZWQgfHwgdGhpcy5nZW5lcmljUGF5bWVudERldGFpbHMuaXNXb3JsZFBheUVuYmxlZCB8fCB0aGlzLmdlbmVyaWNQYXltZW50RGV0YWlscy5pc1BheUZvcnQpICYmICh0aGlzLnNldHRpbmdzLmNhcmRFbmFibGUgPT0gdW5kZWZpbmVkIHx8KHRoaXMuc2V0dGluZ3MuY2FyZEVuYWJsZSAhPSdObycgJiYgKHRoaXMuc2V0dGluZ3MuY2FyZEVuYWJsZSA9PSdBbHdheXMnfHwgdGhpcy50b3RhbCA8PSB0aGlzLnNldHRpbmdzLmNyZWRpdERlYml0Q2FyZCkpKSk/MjowO1xuICAgIH1cbiAgICB0aGlzLmNvbW1vblNlcnZpY2Uuc2V0VXNlclJlc3BvbnNlKHRoaXMuZ2VuZXJpY1BheW1lbnREZXRhaWxzLCcnKTtcbiAgICBcbiAgICB0aGlzLnNldHRpbmdzID0gdGhpcy5nZW5lcmljUGF5bWVudERldGFpbHMuc2V0dGluZ3MucmVkdWNlKChvYmo6IGFueSwgaXRlbTogYW55KSA9PiBPYmplY3QuYXNzaWduKG9iaiwgeyBbaXRlbS5rZXldOiBpdGVtLnZhbHVlIH0pLCB7fSk7XG4gICAgXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICB0aGlzLnBheW1lbnRTZWxlY3RlZCh0aGlzLnBheW1lbnRNZXRob2QpXG4gICAgfSwgMTAwKTtcbiAgICB0aGlzLnBheW1lbnRNZXRob2RUeXBlPSB0aGlzLnNldHRpbmdzLmNvdW50cnlSZWdpb249PSA2ID8gJ0FDSCcgOiAnQmFuayB0cmFuc2Zlcic7XG4gICAgdGhpcy5lbWl0dGVyLmVtaXQodGhpcy5wYXltZW50TWV0aG9kVHlwZSk7XG4gICAgdGhpcy5jbGllbnRUZWxlcGhvbmUgPSB0aGlzLmdlbmVyaWNQYXltZW50RGV0YWlscy5jbGllbnREZXRhaWxzLmNvdW50cnljb2RlICsgdGhpcy5nZW5lcmljUGF5bWVudERldGFpbHMuY2xpZW50RGV0YWlscy50ZWxlcGhvbmU7XG4gICAgXG4gIH1cblxuICBwYXltZW50U2VsZWN0ZWQodmFsdWU6IGFueSkge1xuICAgIHZhciB0ZW1wID0gdGhpcy5wYXltZW50TWV0aG9kICE9IHZhbHVlXG4gICAgaWYgKHZhbHVlID4gMCkge1xuICAgICAgICB0aGlzLnBheW1lbnRNZXRob2QgPSB2YWx1ZTtcbiAgICAgICAgdGhpcy5lbWl0dGVyLmVtaXQodmFsdWUpO1xuICAgICAgICB2YXIgY2hlY2sgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh2YWx1ZSkgYXMgSFRNTElucHV0RWxlbWVudFxuICAgICAgICBpZiAoY2hlY2spIHtcbiAgICAgICAgICAgIGNoZWNrLmNoZWNrZWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0ZW1wKSB7XG4gICAgICAgICAgICB0aGlzLnBheUVtaXR0ZXIuZW1pdCh0cnVlKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxufVxuIiwiPGRpdiBjbGFzcz1cInJvdyBwYXktYm9keVwiPlxuICAgIDxkaXYgY2xhc3M9XCJwYXktdGl0bGUtYm94XCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJwYXktdGl0bGVcIj5QYXltZW50IGRldGFpbHM8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInBheS1kZXRhaWxzXCI+XG4gICAgICAgICAgICA8c3BhbiAqbmdJZj1cInBvcnRhbE5hbWUgPT0gJ0ludm9pY2VQb3J0YWwnICYmIChhbW91bnRUb0JlUGFpZCAtIChwZW5kaW5nQW1vdW50ID8gcGVuZGluZ0Ftb3VudCA6IDApKSA+MFwiPlBsZWFzZSBmaWxsIHRoZSBpbmZvcm1hdGlvbiBiZWxvdyBhYm91dCB5b3VyIHBheW1lbnQgbWV0aG9kPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gKm5nSWY9XCJwb3J0YWxOYW1lID09ICdTdGF0ZW1lbnRQb3J0YWwnXCI+UGxlYXNlIGZpbGwgdGhlIGluZm9ybWF0aW9uIGJlbG93IGFib3V0IHlvdXIgcGF5bWVudCBtZXRob2Q8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwicGF5LWRldGFpbHNcIlxuICAgICAgICAgICAgKm5nSWY9XCJwb3J0YWxOYW1lID09ICdJbnZvaWNlUG9ydGFsJyAmJiAoYW1vdW50VG9CZVBhaWQgLSAocGVuZGluZ0Ftb3VudCA/IHBlbmRpbmdBbW91bnQgOiAwKSkgPD0gMFwiPlxuICAgICAgICAgICAgUGF5bWVudCBzdGF0dXMgYW5kIHN1bW1hcnkgaW5mb3JtYXRpb248L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwicGF5LXNlbGVjdGlvblwiXG4gICAgICAgICpuZ0lmPVwiKGFtb3VudFRvQmVQYWlkIC0gcGVuZGluZ0Ftb3VudCkgPjBcIj5cblxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sIHBheS13aWR0aFwiPlBheSB3aXRoPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJyb3cgd2lkdGgtcVwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbCBwYXktYnRuXCIgKGNsaWNrKT1cInBheW1lbnRTZWxlY3RlZCgxKVwiPjxpbnB1dCB0eXBlPVwicmFkaW9cIiBuYW1lPVwicGF5V2l0aFwiIGlkPVwiMVwiPjxzcGFuXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzPVwicGF5LWJ0bi10ZXh0XCI+e3twYXltZW50TWV0aG9kVHlwZSB9fTwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPVwiaWNvbi1hbGlnblwiIHNyYz1cImFzc2V0cy9pY29uL2JhbmstdHJhbnNmZXIuc3ZnXCIgYWx0PVwiXCI+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wgcGF5LWJ0blwiIChjbGljayk9XCJwYXltZW50U2VsZWN0ZWQoMilcIj48aW5wdXQgdHlwZT1cInJhZGlvXCIgbmFtZT1cInBheVdpdGhcIiBpZD1cIjJcIj48c3BhblxuICAgICAgICAgICAgICAgICAgICBjbGFzcz1cInBheS1idG4tdGV4dFwiPkRlYml0IG9yIGNyZWRpdCBjYXJkPC9zcGFuPjxpbWcgY2xhc3M9XCJpY29uLWFsaWduXCIgc3JjPVwiYXNzZXRzL2ljb24vY2FyZC5zdmdcIlxuICAgICAgICAgICAgICAgICAgICBhbHQ9XCJcIj48L2Rpdj5cbiAgICAgICAgICAgIDwhLS0gPGRpdiAqbmdJZj1cInVzZXJEYXRhLmlzU3RyaXBlRW5hYmxlZCAmJiB1c2VyRGF0YS5pc1dhbGxldFBheUVuYWJsZWQgJiYgY2FuRG9XYWxsZXRQYXlcIiBjbGFzcz1cImNvbCBwYXktYnRuXCJcbiAgICAgICAgICAgICAgICBbbmdDbGFzc109XCJ7J3BheS1idG4tYWN0aXZlJyA6IHBheW1lbnRNZXRob2QgPT0gJzMnfVwiIChjbGljayk9XCJwYXltZW50U2VsZWN0ZWQoMylcIj48aW5wdXQgdHlwZT1cInJhZGlvXCJcbiAgICAgICAgICAgICAgICAgICAgbmFtZT1cInBheVdpdGhcIiBpZD1cIjNcIj48c3BhbiBjbGFzcz1cInBheS1idG4tdGV4dFwiPnt7IHdhbGxldFBheURlc2MgfX08L3NwYW4+PGltZ1xuICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImljb24tYWxpZ25cIiBzcmM9XCJcIiBhbHQ9XCJcIj5cbiAgICAgICAgICAgIDwvZGl2PiAtLT5cblxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGxpYi1wYXltZW50LWJhbmstZGV0YWlsc1xuICAgICAgICAgICAgKm5nSWY9XCJwYXltZW50TWV0aG9kID09ICcxJyAmJiBnZW5lcmljUGF5bWVudERldGFpbHMuaXNHb2NhcmRsZXNzRW5hYmxlZCAmJiAoZ2VuZXJpY1BheW1lbnREZXRhaWxzLnNldHRpbmdzLmNvdW50cnlSZWdpb24gPT0gNiB8fCBnZW5lcmljUGF5bWVudERldGFpbHMuY3VzdG9tZXJEZXRhaWxzLnBvc3Rjb2RlKVwiXG4gICAgICAgICAgICBbcGF5bWVudFR5cGVTXT1cInBheW1lbnRNZXRob2RUeXBlXCIgKHBheUVtaXR0ZXIpPVwidmFsaWQoJGV2ZW50KVwiIFtwYXltZW50RGF0YV09XCJnZW5lcmljUGF5bWVudERldGFpbHNcIj48L2xpYi1wYXltZW50LWJhbmstZGV0YWlscz5cbiAgICAgICAgPGxpYi1wYXltZW50LWNhcmQtZGV0YWlscyAqbmdJZj1cInBheW1lbnRNZXRob2QgPT0gJzInXCIgW2NhcmRQYXltZW50RGF0YV09XCJnZW5lcmljUGF5bWVudERldGFpbHNcIlxuICAgICAgICAgICAgKHBheUVtaXR0ZXIpPVwidmFsaWQoJGV2ZW50KVwiPjwvbGliLXBheW1lbnQtY2FyZC1kZXRhaWxzPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJwYXltZW50Q29tcGxldGVkXCJcbiAgICAgICAgKm5nSWY9XCIoYW1vdW50VG9CZVBhaWQgLSBwZW5kaW5nQW1vdW50KSAgPD0gMFwiPlxuICAgICAgICA8bGliLXBheW1lbnQtY29tcGxldGUgW3ZhbGlkXT1cInBheW1lbnRDb21wbGV0ZWRcIlxuICAgICAgICAgICAgW2NvbXBsZXRlUGFnZURldGFpbHNdPVwiZ2VuZXJpY1BheW1lbnREZXRhaWxzXCI+PC9saWItcGF5bWVudC1jb21wbGV0ZT5cbiAgICA8L2Rpdj5cbjwvZGl2PlxuPGRpdiBjbGFzcz1cInJvdyBwYXktYm9keSBlcnJvci1ib2R5XCIgKm5nSWY9XCJwYXltZW50TWV0aG9kID09IDBcIj5cbiAgICA8ZGl2IGNsYXNzPVwiZXJyb3ItdGl0bGVcIj5cbiAgICAgICAgT29wcy4gU29ycnksIHdlIGFyZSB1bmFibGUgdG8gcHJvY2VzcyB5b3VyIHBheW1lbnQuXG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cImVycm9yLWNvbnRlbnRcIj5cbiAgICAgICAgQW4gZXJyb3IgaGFzIG9jY3VycmVkIHdoaWxlIGF0dGVtcHRpbmcgdG8gcHJvY2VzcyB5b3VyIG9yZGVyLiBQbGVhc2UgdHJ5IGFnYWluIG9yIHRyeSBhbm90aGVyIHBheW1lbnQgbWV0aG9kLlxuICAgIDwvZGl2PlxuPC9kaXY+Il19