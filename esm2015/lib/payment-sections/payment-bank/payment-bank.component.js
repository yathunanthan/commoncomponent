import { Component, Input, Output, EventEmitter } from '@angular/core';
import { Validators } from '@angular/forms';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@angular/common";
// import { Injectable } from '@angular/core';
export class PaymentBankComponent {
    // @Injectable({providedIn: 'root'})
    // resp: any;
    // testObj:any;
    constructor(fb) {
        this.fb = fb;
        this.companyNameSelected = false;
        this.payEmitter = new EventEmitter();
    }
    ngOnInit() {
        if (this.paymentTypeS == 'PAD') {
            this.paymentType = 1;
        }
        else if (this.paymentTypeS == 'Bank transfer') {
            this.paymentType = 2;
        }
        else if (this.paymentTypeS == 'ACH') {
            this.paymentType = 3;
        }
        else if (this.paymentTypeS == 'SEPA') {
            this.paymentType = 4;
        }
        this.buildPaymetForm();
    }
    buildPaymetForm() {
        if (this.paymentType == 1) {
            this.paymentForm = this.fb.group({
                firstName: ['', [Validators.required]],
                lastName: ['', [Validators.required]],
                email: ['', [Validators.required, Validators.email]],
                country: ['', [Validators.required]],
                institutionNo: ['', [Validators.required]],
                transitNo: ['', [Validators.required]],
                accountNo: ['', [Validators.required,]],
            });
        }
        else if (this.paymentType == 2) {
            this.paymentForm = this.fb.group({
                instantpayment: this.fb.group({
                    country_code: 'GB',
                    currency: this.userData.currencyCode,
                    payment: this.fb.group({
                        description: "Invoice no : #" + this.userData.invoiceDetails.invoiceNumber,
                        amount: [0, [Validators.required]],
                        app_fee: "1",
                    }),
                    customer: this.fb.group({
                        commusoftId: 0,
                        addressline1: this.userData.customerDetails.addressline1,
                        addressline2: this.userData.customerDetails.addressline2,
                        addressline3: this.userData.customerDetails.addressline3,
                        companyname: "",
                        surname: this.userData.customerDetails.customerName,
                        firstname: this.userData.customerDetails.customerName,
                        postcode: this.userData.customerDetails.postcode,
                        phonenumber: "",
                        region: this.userData.customerDetails.county,
                        email: [this.userData.customerDetails.emailId, [Validators.required, Validators.email]],
                        language: ""
                    }),
                    bank: this.fb.group({
                        firstname: [this.userData.customerDetails.customerName, [Validators.required]],
                        lastname: [""],
                        account_number: ['', [Validators.required]],
                        iban: "",
                        account_type: "",
                        bank_code: "",
                        branch_code: ["", [Validators.required]],
                    })
                }),
            });
        }
        else if (this.paymentType == 3) {
            this.paymentForm = this.fb.group({
                firstName: ['', [Validators.required]],
                lastName: ['', [Validators.required]],
                email: ['', [Validators.required, Validators.email]],
                billingAddress1: ['', [Validators.required]],
                billingAddress2: ['', [Validators.required]],
                accountNo: ['', [Validators.required,]],
                routingNo: ['', [Validators.required]],
                accountType: ['', [Validators.required]],
                // confirm: [false, [Validators.requiredTrue] ],
            });
        }
        else if (this.paymentType == 4) {
            this.paymentForm = this.fb.group({
                firstName: ['', [Validators.required]],
                lastName: ['', [Validators.required]],
                email: ['', [Validators.required, Validators.email]],
                creditorIdentifier: ['', [Validators.required]],
                internationalBankAccountNo: ['', [Validators.required]],
                accountNo: ['', [Validators.required,]],
                billingAddress1: ['', [Validators.required]],
                billingAddress2: ['', [Validators.required]],
            });
        }
    }
    companyNameClick() {
        this.companyNameSelected = !this.companyNameSelected;
        this.paymentForm.patchValue({ 'instantpayment': { 'bank': { 'firstname': '' } } });
    }
    keypress() {
        this.payEmitter.emit(this.paymentForm);
    }
    branch_codeFormat(el) {
        this.paymentForm.patchValue({ 'instantpayment': { 'bank': { 'branch_code': el.target.value.replace(/[^0-9]/g, '').replace(/(\d{2})(?=\d)/g, "$1-") } } });
        this.keypress();
    }
}
PaymentBankComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: PaymentBankComponent, deps: [{ token: i1.FormBuilder }], target: i0.ɵɵFactoryTarget.Component });
PaymentBankComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: PaymentBankComponent, selector: "app-payment-bank", inputs: { paymentTypeS: "paymentTypeS" }, outputs: { payEmitter: "payEmitter" }, ngImport: i0, template: "<form>\n    <div>\n        \n<div class=\"content-group\">\n    <div *ngIf=\"paymentType!=2  && !companyNameSelected\" class=\"row\">\n        <div class=\"col-md-6\">\n            <div class=\"lable\">First name</div>\n            <input class=\"field\" type=\"text\" (keyup)=\"keypress()\" >\n        </div>\n        <div class=\"col-md-6\">\n            <div class=\"lable\">Last name</div>\n            <input class=\"field\" type=\"text\" (keyup)=\"keypress()\" >\n        </div>\n    </div>\n    <div *ngIf=\"paymentType==2\" class=\"direct-debit\">\n        <div>\n            <div class=\"form-group\">\n        <div class=\"lable\">Account holder\u2019s name</div>\n            <input formControlName=\"firstname\" class=\"field\" type=\"text\" (keyup)=\"keypress()\" >\n            </div></div>\n    </div>\n    <div class=\"direct-debit\">\n        <div>\n            <div class=\"form-group\">\n        <div class=\"lable\">Company name</div>\n            <input class=\"field\" type=\"text\" (keyup)=\"keypress()\" >\n        </div></div>\n    </div>\n    <div *ngIf=\"!companyNameSelected\" class=\"company-name-link\" (click)=\"companyNameClick()\">Or click here to use a company name</div>\n    <div *ngIf= \"companyNameSelected\" class=\"company-name-link\" (click)=\"companyNameClick()\">Or click here to use your personal information</div>\n</div>\n<div class=\"content-group\">\n    <div>\n        <div class=\"form-group\">\n            <div class=\"lable\">Email address</div>\n    <input class=\"field\" type=\"text\" placeholder=\"william.ty@example.co\" (keyup)=\"keypress()\" >\n    <div class=\"email-info\">This email will only be used to keep you updated about their payments</div>\n\n        </div>\n    </div>\n    \n</div>\n<div *ngIf=\"paymentType==1\" class=\"content-group\">\n    <div class=\"lable\">vdsf</div>\n    <select (click)=\"keypress()\">\n        <option value=\"\" disabled selected hidden>Please select</option>\n        <!-- <option *ngFor=\"let name of countryName\" [value]=\"name\" >{{name}}</option> -->\n    </select><i class=\"fa-solid fa-angle-down\"></i>\n</div>\n<div class=\"content-group\">\n    <div *ngIf=\"paymentType==1\" class=\"row\">\n        <div class=\"col-md-6\">\n            <div class=\"lable\">Institution number</div>\n            <input class=\"field\" type=\"text\" placeholder=\"E.g. 10-20-30\" (keyup)=\"keypress()\" >\n        </div>\n        <div class=\"col-md-6\">\n            <div class=\"lable transit-adjust\">Transit number</div>\n            <input class=\"field\" type=\"text\" placeholder=\"E.g. 12345678\" (keyup)=\"keypress()\" >\n        </div>\n    </div>\n    <div *ngIf=\"paymentType==2\" class=\"row\">\n        <div class=\"col-md-4\">\n                <div>\n                    <div class=\"form-group\">\n\n            <div class=\"lable\">Sort code</div>\n            <input class=\"field\" type=\"text\" placeholder=\"E.g. 10-20-30\" (input)=\"branch_codeFormat($event)\" maxlength=\"8\" >\n                    </div></div>\n        </div>\n        <div class=\"col-md-8\">\n            <div>\n                <div class=\"form-group\">\n\n\n            <div class=\"lable transit-adjust\">Account number</div>\n            <input class=\"field\" type=\"text\" placeholder=\"E.g. 12345678\" (keyup)=\"keypress()\" >\n        </div></div>\n        </div>\n    </div>\n</div>\n<div *ngIf=\"paymentType==1\" class=\"content-group\">\n    <div class=\"lable\">Account number</div>\n    <input class=\"field\" type=\"text\" placeholder=\"E.g. 12345678\" (keyup)=\"keypress()\" >\n</div>\n\n<div *ngIf=\"paymentType==4\" class=\"content-group\">\n    <div class=\"lable\">Creditor identifier</div>\n    <input class=\"field\" type=\"text\" placeholder=\"Creditor identifier\" (keyup)=\"keypress()\" >\n</div>\n\n<div *ngIf=\"paymentType==4\" class=\"content-group\">\n    <div class=\"lable\">International bank account number (IBAN)</div>\n    <input class=\"field\" type=\"text\" placeholder=\"International bank account number (IBAN)\" (keyup)=\"keypress()\" >\n</div>\n\n<div *ngIf=\"paymentType==3 || paymentType==4\" class=\"content-group\">\n    <div class=\"lable\">Billing address</div>\n    <input class=\"field\" type=\"text\" placeholder=\"Address Line 1\" >\n    <input class=\"field\" type=\"text\" placeholder=\"Address Line 2\" style=\"margin-top:12px\" >\n\n</div>\n<div *ngIf=\"paymentType==3 || paymentType==4\" class=\"content-group\">\n    <div class=\"lable\">Bank account number</div>\n    <input class=\"field\" type=\"text\" placeholder=\"Bank account number\" (keyup)=\"keypress()\">\n</div>\n<div *ngIf=\"paymentType==3\" class=\"content-group\">\n    <div class=\"row\">\n        <div class=\"col-md-6\">\n            <div class=\"lable\">Routing number</div>\n            <input class=\"field\" type=\"text\" placeholder=\"Routing number\" (keyup)=\"keypress()\">\n        </div>\n        <div class=\"col-md-6\">\n            <div class=\"lable transit-adjust\">Account type</div>\n            <select (click)=\"keypress()\">\n                <option value=\"\" disabled selected hidden>Please select</option>\n                <option>xxxx - xxxx - xxxx - 1234</option>\n                <option>Use existing credit card</option>\n            </select><i class=\"fa-solid fa-angle-down\"></i>\n        </div>\n    </div>\n</div>\n\n<div class=\"content-group\" style=\"margin-bottom: 0;\">\n    <div *ngIf=\"paymentType==1\">\n    <div class=\"confirm\">\n        <span style=\"margin-top: 5px;\">I confirm that I am the account holder and am authorised to set up PAD payments on this account</span>\n    </div>\n    </div>\n    \n    <div *ngIf=\"paymentType==2\">\n        <div class=\"confirm\">\n            <span>We work with a company called GoCardless. They help us process your payment, which involves some of your personal data. By continuing, you agree to their terms of use and understand their <a href=\"https://gocardless.com/privacy/payers/\"  target=\"_blank\"> privacy notice.</a></span></div>\n        </div>\n    <div *ngIf=\"paymentType==3\">\n        <div class=\"confirm-msg\">\n            This service is provided by Community Federal Savings Bank (\u201CCFSB\u201D), member FDIC, forwhich GoCardless Ltd acts as a third-party servicer. GoCardless and CFSB use personal data as described in <a>these privacy notices</a>. By submitting this form, you agree to the GoCardless <a>Website Terms of Use</a>. GoCardless uses analytics <a>cookies</a>.\n        </div></div>\n    \n        <div *ngIf=\"paymentType==4\">\n            <div class=\"confirm-msg\">\n                By signing this mandate form, you authorise (A) GoCardless to send instructions to your bank to debit your account (B) your bank to debit your account in accordance with the instructions from GoCardless. As part of your rights, you are entitled to refund from your bank under the terms and conditions of your agreement with your bank. A refund must be claimed within 8 weeks starting from the date on which your account was debited.\n            </div></div>\n        </div>\n        </div>\n    </form>", styles: ["a{color:var(--circleFontColour)!important;cursor:pointer;text-decoration:none}.lable{font-size:14px;color:var(--primaryTextColor);padding-bottom:8px}.field{width:100%;border:1px solid var(--primaryBorderColor);border-radius:4px;height:40px;padding:0 5px;color:var(--primaryTextColor);font-family:\"Helvetica\";font-style:normal;font-weight:400;font-size:14px;line-height:24px}.field:focus-visible{outline:1px solid var(--inputHighlight)}.company-name-link{padding-top:8px;color:var(--tertiaryButtonFontColour);cursor:pointer;font-family:\"Helvetica\";font-style:normal;font-weight:400;font-size:14px;line-height:20px;max-width:-moz-fit-content;max-width:fit-content}.email-info{color:var(--positiveFoundation);margin-top:8px;font-family:\"Helvetica\";font-style:normal;font-weight:400;font-size:14px;line-height:20px}.content-group{margin:16px 0;font-size:14px}.content-group select:invalid{color:gray}.content-group select{appearance:none;background-color:#fff;border:1px solid var(--primaryBorderColor);border-radius:4px;padding:0 5px;color:var(--primaryTextColor)}.content-group select:focus-visible{outline:1px solid var(--inputHighlight)}.content-group .fa-angle-down{position:absolute;margin-left:-30px;margin-top:13px;color:var(--primaryTextColor)}.content-group ::placeholder{color:#c9c9c9;opacity:1}.content-group :-ms-input-placeholder{color:#c9c9c9}.content-group ::-ms-input-placeholder{color:#c9c9c9}select{width:100%;height:40px}#confirm{min-width:24px;height:24px;margin-right:12px;cursor:pointer}.confirm{font-size:14px;color:var(--primaryTextColor);display:flex;margin-top:16px;align-items:center}.confirm input[type=checkbox]{outline:1px solid #EEEEEE}.form-check-input:focus{border-color:#c9c9c9!important;outline:0;box-shadow:0 0 0 .25rem #0d6efd00}.form-check-input:checked{background-color:#3883c1;border-color:#3883c1!important}.addons-checkbox{width:24px;height:24px;margin-bottom:5px;border-color:#c9c9c9!important;outline:0;border-style:solid;border-width:1px}.confirm-msg{font-size:14px;color:var(--primaryTextColor)}.confirm-msg a{color:var(--linkColor)!important}.confirm-msg a:hover{color:var(--linkVisitedColor)!important}.invalid-input{margin-top:5px;color:#b94a48}@media (max-width: 768px){.transit-adjust{margin-top:8px}.confirm{align-items:baseline}.content-group{margin:12px 0}}\n"], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: PaymentBankComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'app-payment-bank',
                    templateUrl: './payment-bank.component.html',
                    styleUrls: ['./payment-bank.component.scss']
                }]
        }], ctorParameters: function () { return [{ type: i1.FormBuilder }]; }, propDecorators: { paymentTypeS: [{
                type: Input
            }], payEmitter: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,